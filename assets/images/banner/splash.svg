<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!-- Created with Inkscape (http://www.inkscape.org/) -->

<svg
   version="1.1"
   id="svg9"
   width="1024"
   height="500"
   viewBox="0 0 1024 500"
   sodipodi:docname="splash.svg"
   xml:space="preserve"
   inkscape:version="1.2.2 (732a01da63, 2022-12-09)"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg"><defs
     id="defs13"><clipPath
       clipPathUnits="userSpaceOnUse"
       id="clipPath53398"><rect
         style="fill:url(#meshgradient53402);fill-opacity:1;stroke-width:2.23471"
         id="rect53400"
         width="1024"
         height="500"
         x="0"
         y="0" /></clipPath><meshgradient
       inkscape:collect="always"
       id="meshgradient53402"
       gradientUnits="userSpaceOnUse"
       x="0"
       y="0"><meshrow
         id="meshrow53414"><meshpatch
           id="meshpatch53412"><stop
             path="c 341.333,0  682.667,0  1024,0"
             style="stop-color:#410101;stop-opacity:1"
             id="stop53404" /><stop
             path="c 0,166.667  0,333.333  0,500"
             style="stop-color:#47215e;stop-opacity:1"
             id="stop53406" /><stop
             path="c -341.333,0  -682.667,0  -1024,0"
             style="stop-color:#b62100;stop-opacity:1"
             id="stop53408" /><stop
             path="c 0,-166.667  0,-333.333  0,-500"
             style="stop-color:#fc5506;stop-opacity:1"
             id="stop53410" /></meshpatch></meshrow></meshgradient><meshgradient
       inkscape:collect="always"
       id="meshgradient54003"
       gradientUnits="userSpaceOnUse"
       x="0"
       y="0"><meshrow
         id="meshrow54005"><meshpatch
           id="meshpatch54007"><stop
             path="c 341.333,0  682.667,0  1024,0"
             style="stop-color:#410101;stop-opacity:1"
             id="stop54009" /><stop
             path="c 0,166.667  0,333.333  0,500"
             style="stop-color:#47215e;stop-opacity:1"
             id="stop54011" /><stop
             path="c -341.333,0  -682.667,0  -1024,0"
             style="stop-color:#b62100;stop-opacity:1"
             id="stop54013" /><stop
             path="c 0,-166.667  0,-333.333  0,-500"
             style="stop-color:#fe5606;stop-opacity:1"
             id="stop54015" /></meshpatch></meshrow></meshgradient><meshgradient
       inkscape:collect="always"
       id="meshgradient116904"
       gradientUnits="userSpaceOnUse"
       x="0"
       y="0"><meshrow
         id="meshrow116906"><meshpatch
           id="meshpatch116908"><stop
             path="c 341.333,0  682.667,0  1024,0"
             style="stop-color:#ff7977;stop-opacity:1"
             id="stop116910" /><stop
             path="c 0,166.667  0,333.333  0,500"
             style="stop-color:#853aa6;stop-opacity:1"
             id="stop116912" /><stop
             path="c -341.333,0  -682.667,0  -1024,0"
             style="stop-color:#fea18d;stop-opacity:1"
             id="stop116914" /><stop
             path="c 0,-166.667  0,-333.333  0,-500"
             style="stop-color:#ffbebe;stop-opacity:1"
             id="stop116916" /></meshpatch></meshrow></meshgradient></defs><sodipodi:namedview
     id="namedview11"
     pagecolor="#ffffff"
     bordercolor="#000000"
     borderopacity="0.25"
     inkscape:showpageshadow="2"
     inkscape:pageopacity="0.0"
     inkscape:pagecheckerboard="0"
     inkscape:deskcolor="#d1d1d1"
     showgrid="false"
     inkscape:zoom="0.77556818"
     inkscape:cx="402.9304"
     inkscape:cy="244.98168"
     inkscape:window-width="1920"
     inkscape:window-height="1009"
     inkscape:window-x="-8"
     inkscape:window-y="-8"
     inkscape:window-maximized="1"
     inkscape:current-layer="layer4" /><g
     inkscape:groupmode="layer"
     id="layer1"
     inkscape:label="Background"><rect
       style="fill:url(#meshgradient116904);fill-opacity:1;stroke-width:2.23471"
       id="rect230-8"
       width="1024"
       height="500"
       x="0"
       y="0" /><script
       id="mesh_polyfill"
       type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script></g><g
     inkscape:groupmode="layer"
     id="layer4"
     inkscape:label="Members"
     style="display:inline"><path
       style="fill:url(#meshgradient54003);fill-opacity:1;stroke-width:1.03712"
       d="M 0,249.99999 V 0 H 511.99994 1024 V 249.99831 499.9966 C 646.55003,498.93517 358.12949,499.2442 0,500 Z m 169.46962,92.4299 0.4623,-23.63396 -1.01508,3.15119 c -3.1523,48.16022 -0.6698,80.94392 0.55278,20.48277 z m 65.02635,18.38198 c 0,-0.28887 -0.2304,-0.5252 -0.512,-0.5252 -0.2816,0 -0.512,0.23633 -0.512,0.5252 0.44528,0.79586 0.63176,0.40235 1.024,0 z m 260.09597,0 c 0,-0.28887 -0.2304,-0.5252 -0.512,-0.5252 -0.2816,0 -0.512,0.23633 -0.512,0.5252 0.44528,0.79586 0.63176,0.40235 1.024,0 z m 22.91535,-20.44325 c 2.88456,-1.71141 8.30036,-6.11745 12.03512,-9.7912 l 6.79048,-6.67952 0.75395,-3.60138 c 1.04034,-4.96944 1.2844,-5.22354 3.99985,-4.16452 l 2.39024,0.9322 3.66751,-3.86093 c 4.14574,-4.36439 6.87841,-10.26495 6.75866,-14.59378 -0.0444,-1.60728 -0.31326,-2.33148 -0.59733,-1.60933 -0.71944,1.82892 -2.39383,1.64525 -2.39383,-0.2626 0,-1.78375 -1.60351,-2.11273 -2.56,-0.5252 -0.34808,0.57772 -1.15336,1.0504 -1.78952,1.0504 -0.63616,0 -0.11816,-0.99244 1.1511,-2.20543 1.36719,-1.30656 3.11527,-1.9888 4.28908,-1.67394 1.08975,0.29234 1.98134,0.11207 1.98134,-0.40055 0,-1.8867 -5.17124,-2.2369 -8.57385,-0.58063 l -3.43823,1.67361 -1.31292,5.00727 c -1.94944,7.43485 -2.68604,7.42664 -3.36553,-0.0375 l -0.61236,-6.7268 -2.35656,-3.81613 C 523.91512,271.64604 518.62203,265.7508 513.89651,265.7508 h -1.89657 l -0.0157,2.8886 c -0.008,1.58873 -0.39853,3.50782 -0.86643,4.26464 l -0.85074,1.37606 -0.0931,-3.35817 c -0.0512,-1.84699 -0.5829,-3.86061 -1.18158,-4.47472 l -1.08851,-1.11657 -0.0157,2.04828 -0.0157,2.04828 -0.88524,-1.43331 -0.88525,-1.43332 -6.52307,-0.0686 c -11.06151,-0.11631 -13.62694,2.45397 -14.10124,14.12782 l -0.24136,5.9406 3.09367,0.69701 c 1.70152,0.38335 4.26732,1.64399 5.70177,2.80141 l 2.60808,2.10442 v 3.60015 c 0,3.87141 -1.48145,4.88554 -2.32175,1.58936 -0.60317,-2.36597 -6.27891,-5.64702 -8.75499,-5.06108 -1.01016,0.23903 0.0341,0.922 2.52346,1.65043 3.67822,1.07632 7.07687,4.37105 4.50889,4.37105 -0.49945,0 -1.63402,0.28573 -2.52126,0.63499 l -1.61316,0.63498 -1.02734,-2.47318 -1.02732,-2.47318 0.39618,3.93899 c 0.21791,2.16644 0.0969,3.93899 -0.26894,3.93899 -0.36582,0 -1.22424,0.91838 -1.90762,2.04084 l -1.24249,2.04083 1.42363,3.49509 c 0.78301,1.92229 2.33754,4.34346 3.45452,5.38037 l 2.03088,1.88531 0.72367,-1.20113 c 0.39802,-0.66061 1.09536,-2.46395 1.54964,-4.00742 l 0.82597,-2.8063 0.0881,2.23479 c 0.12697,3.22372 2.27722,4.6048 6.7235,4.3184 2.25472,-0.14524 4.0727,0.26704 4.31943,0.97955 l 0.42604,1.23035 -1.99186,-0.53432 -1.99185,-0.53431 -4.20494,3.12457 -4.20493,3.12457 4.79024,0.73686 c 2.63463,0.40527 6.89447,1.65109 9.46631,2.76846 l 4.67607,2.03161 -5.87742,-0.62351 c -9.55606,-1.01376 -13.65225,1.68014 -4.86921,3.20229 5.03783,0.87307 5.19131,2.12512 0.50663,4.13295 -3.89075,1.66758 -4.2599,2.46838 -2.304,4.99811 1.69563,2.19308 3.46029,2.76523 8.83535,2.86465 l 4.48336,0.083 5.24464,-3.11168 z m -23.26735,-35.22787 c 0.34303,-2.31088 0.79296,-4.39855 0.99985,-4.63926 0.77565,-0.90249 0.19496,4.7236 -0.69567,6.74006 l -0.92787,2.10079 z m 48.82214,-4.20159 c 0.46946,-1.44811 4.00557,-1.32621 4.4868,0.15468 0.23387,0.71973 -0.65939,1.14279 -2.21787,1.0504 -1.4352,-0.0851 -2.45622,-0.62737 -2.26893,-1.20508 z m -30.86955,-4.33649 -0.93317,-1.71048 -0.71414,1.18528 c -0.89075,1.47841 -2.64128,1.55288 -2.64128,0.11237 0,-0.5901 1.13286,-1.60239 2.51747,-2.24952 l 2.51747,-1.1766 4.65053,1.33563 c 4.85877,1.39544 6.55849,3.78244 2.06609,2.90154 -1.42144,-0.27874 -2.83103,-0.0975 -3.13243,0.40274 -0.89545,1.48623 -3.32821,1.03628 -4.33054,-0.80096 z m -10.43259,-4.92969 c 0,-0.88712 0.68988,-2.32061 1.53306,-3.18554 0.84319,-0.86491 1.24588,-2.34024 0.89489,-3.27849 -0.66971,-1.79023 1.49283,-13.97108 2.60561,-14.67655 0.35474,-0.22489 0.64498,1.44332 0.64498,3.70715 0,2.26382 -0.35606,4.11603 -0.79126,4.11603 -0.4352,0 -0.79128,1.92096 -0.79128,4.2688 v 4.26879 l 2.816,-0.2256 c 1.5488,-0.12408 4.8896,-0.12313 7.424,0.002 l 4.608,0.22771 -7.68,2.45251 c -4.224,1.34889 -8.4864,2.78632 -9.472,3.19428 l -1.792,0.74175 v -1.61295 z m 8.192,-9.11579 c 0,-0.7703 0.3072,-1.08542 0.68267,-0.70028 0.37546,0.38515 0.37546,1.01539 0,1.40054 -0.37547,0.38514 -0.68267,0.07 -0.68267,-0.70026 z m -1.024,-4.61373 c 0,-1.57468 0.41976,-2.59693 0.93279,-2.27169 1.02797,0.6517 0.89753,3.25725 -0.22048,4.40408 -0.39177,0.40187 -0.71231,-0.5577 -0.71231,-2.13239 z m 31.3727,51.15539 0.6733,-2.7518 -1.87856,-1.40904 -1.87856,-1.40905 -3.50245,6.56187 c -1.92634,3.60903 -4.12055,7.70967 -4.87603,9.11256 -0.75547,1.40287 -1.08842,3.02397 -0.73988,3.60246 0.87965,1.46 11.37614,-10.33094 12.20218,-13.707 z m 64.53747,1.51406 c -0.28407,-0.72215 -0.5165,-0.13129 -0.5165,1.313 0,1.4443 0.23243,2.03514 0.5165,1.313 0.28407,-0.72216 0.28407,-1.90385 0,-2.626 z m -332.45415,-5.51459 c 0,-0.28886 -0.2304,-0.5252 -0.512,-0.5252 -0.2816,0 -0.512,0.23634 -0.512,0.5252 0,0.28886 0.2304,0.5252 0.512,0.5252 0.2816,0 0.512,-0.23634 0.512,-0.5252 z M 169.69341,310.13014 c -0.23462,-1.58873 -0.42659,-0.28886 -0.42659,2.8886 0,3.17745 0.19197,4.47732 0.42659,2.8886 0.23463,-1.58873 0.23463,-4.18847 0,-5.7772 z m 657.07356,0.2626 0.68715,-3.15119 -1.03942,1.57559 c -0.57169,0.86659 -1.04649,2.48157 -1.05511,3.58887 -0.0209,2.68738 0.56517,1.84897 1.40738,-2.01327 z m -82.66038,-0.17507 c -0.37547,-0.38514 -0.98987,-0.38514 -1.36534,0 -0.37546,0.38515 -0.0683,0.70027 0.68267,0.70027 0.75093,0 1.05813,-0.31512 0.68267,-0.70027 z m 83.96799,-5.25199 c -0.37547,-0.38514 -0.68267,-0.07 -0.68267,0.70027 0,0.77028 0.3072,1.08541 0.68267,0.70026 0.37546,-0.38515 0.37546,-1.01538 0,-1.40053 z m -220.3996,-9.995 0.56047,-6.6363 -0.90702,3.15119 c -0.49886,1.73316 -1.15176,5.75093 -1.45089,8.92839 l -0.54388,5.77719 0.89042,-2.29208 c 0.48974,-1.26067 1.14264,-5.27844 1.4509,-8.92839 z m -436.93489,-5.2881 c -0.2075,-3.0524 -0.37946,-0.823 -0.38212,4.95419 -0.003,5.77719 0.1671,8.2746 0.37728,5.54979 0.21018,-2.72479 0.21236,-7.45158 0.005,-10.50398 z m 547.07729,1.77321 c -0.94167,-4.28287 -1.8983,-5.68941 -8.01689,-11.7872 -5.1102,-5.09285 -5.80171,-5.30523 -7.38615,-2.26837 l -1.14564,2.19584 5.46162,5.47058 c 4.83407,4.84203 10.88902,10.09533 11.63586,10.09533 0.14633,0 -0.10066,-1.66779 -0.5488,-3.70618 z m 112.3052,1.9555 c -0.37547,-0.38513 -0.68267,-0.07 -0.68267,0.70028 0,0.77028 0.3072,1.08541 0.68267,0.70026 0.37546,-0.38515 0.37546,-1.01539 0,-1.40054 z m -561.83462,-0.87532 c 0,-0.28886 -0.2304,-0.5252 -0.512,-0.5252 -0.2816,0 -0.512,0.23634 -0.512,0.5252 0,0.28885 0.2304,0.5252 0.512,0.5252 0.2816,0 0.512,-0.23635 0.512,-0.5252 z m -2.048,-2.1008 c 0,-0.28886 -0.2304,-0.5252 -0.512,-0.5252 -0.2816,0 -0.512,0.23634 -0.512,0.5252 0,0.28886 0.2304,0.5252 0.512,0.5252 0.2816,0 0.512,-0.23634 0.512,-0.5252 z m 2.048,0 c 0,-0.28886 -0.2304,-0.5252 -0.512,-0.5252 -0.2816,0 -0.512,0.23634 -0.512,0.5252 0,0.28886 0.2304,0.5252 0.512,0.5252 0.2816,0 0.512,-0.23634 0.512,-0.5252 z m 563.70589,-4.75962 0.54434,-3.64356 -1.47123,3.67639 c -0.80919,2.02201 -1.5063,4.12544 -1.54914,4.67427 l -0.0779,0.99787 1.0048,-1.03069 c 0.55265,-0.56689 1.24975,-2.67032 1.54914,-4.67428 z m -222.71392,0.55803 c 0,-0.28886 -0.2304,-0.5252 -0.512,-0.5252 -0.2816,0 -0.512,0.23634 -0.512,0.5252 0,0.28885 0.2304,0.5252 0.512,0.5252 0.2816,0 0.512,-0.23635 0.512,-0.5252 z m 139.46761,-6.41213 c 0.95679,-0.28761 2.01708,-1.56227 2.3562,-2.83259 1.82745,-6.84549 4.97709,-17.59477 6.37063,-21.74204 0.87355,-2.59973 1.79325,-7.79921 2.04376,-11.55438 l 0.4555,-6.82759 -1.19321,1.1915 c -0.65626,0.65532 -2.1149,0.94426 -3.24141,0.64206 l -2.04822,-0.54942 1.33691,-0.84756 c 0.7353,-0.46615 0.99698,-1.19625 0.5815,-1.62243 -0.41548,-0.4262 -1.30069,-0.21556 -1.96715,0.46808 -0.66645,0.68363 -2.04117,1.24297 -3.05493,1.24297 -1.69486,0 -1.96455,-0.63124 -2.25507,-5.27802 -0.16884,-2.70067 4.21432,-7.43349 7.26528,-7.84484 1.58102,-0.21316 3.07787,-0.42015 3.32631,-0.45995 0.24844,-0.0398 -0.29201,-0.66322 -1.20102,-1.38537 l -1.65275,-1.31299 -0.54123,-6.8276 -0.54125,-6.82759 0.99302,2.1008 0.99301,2.10079 -0.48698,-4.06927 c -0.26784,-2.2381 -1.31308,-5.02478 -2.32275,-6.19263 l -1.83577,-2.12336 2.16122,1.16182 c 6.7752,3.64216 11.97266,12.66975 10.23678,17.78053 l -0.62703,1.84611 1.6021,-2.10081 1.6021,-2.10079 -0.58066,-3.04588 c -0.31935,-1.67524 -1.94957,-5.16587 -3.6227,-7.75696 -1.67315,-2.59111 -2.82125,-5.07761 -2.55134,-5.52559 0.7738,-1.28429 -9.19384,-11.50713 -11.21988,-11.50713 h -1.82074 l 3.17808,3.71295 c 4.22213,4.93271 4.01029,5.57511 -0.66193,2.00717 l -3.84,-2.9324 2.15142,2.54513 c 4.40842,5.2152 4.13921,7.16802 -0.63876,4.63356 l -2.99365,-1.58799 0.59405,1.58799 c 0.32673,0.87338 1.47313,1.58797 2.54755,1.58797 1.10522,0 2.83426,1.4824 3.9818,3.4138 l 2.02829,3.41379 -0.16104,4.45526 -0.16105,4.45525 -1.56909,-2.35445 c -3.59718,-5.39763 -10.94406,-9.05588 -14.98921,-7.46359 -0.98321,0.38702 -2.10197,0.10263 -2.55517,-0.64958 l -0.80616,-1.33803 -1.37649,0.87264 c -1.86334,1.1813 -4.99649,1.35147 -4.99649,0.27137 0,-1.36862 -1.84586,-1.02488 -2.35273,0.43814 -0.25019,0.72214 -0.30354,0.0543 -0.11855,-1.48398 0.185,-1.53835 -0.28222,-3.32359 -1.03826,-3.96724 l -1.37462,-1.17023 -0.6066,2.47915 c -0.33362,1.36354 -1.24506,2.47917 -2.02542,2.47917 h -1.41882 l 0.49093,-1.92574 c 0.55893,-2.19245 -0.79142,-2.53596 -2.61513,-0.66524 l -1.2288,1.26047 -0.12126,-2.04828 c -0.0667,-1.12654 -0.0424,-2.47764 0.0541,-3.00241 0.0965,-0.52478 -0.42501,-1.38796 -1.15874,-1.91817 l -1.33406,-0.96403 1.28,-0.53275 c 1.99377,-0.82986 1.50425,-2.47645 -0.512,-1.72223 l -1.792,0.67035 2.02826,-2.36681 2.02826,-2.36681 -2.79626,1.3069 c -1.53795,0.7188 -2.79626,1.73161 -2.79626,2.25069 0,0.51909 -0.4608,0.65166 -1.024,0.29461 -0.5632,-0.35706 -1.024,-1.53951 -1.024,-2.62768 v -1.97849 l -2.17547,0.42975 c -1.19651,0.23637 -3.27011,1.16549 -4.608,2.06471 -2.5407,1.70764 -3.32671,0.82311 -1.20373,-1.35461 0.67584,-0.69326 0.89999,-1.26048 0.49811,-1.26048 -2.76808,0 -12.35692,8.41015 -14.61131,12.81522 -2.12148,4.14539 -1.76815,6.11069 0.43428,2.41556 1.03302,-1.73316 2.7593,-3.85207 3.83617,-4.70869 l 1.95795,-1.55749 -1.67088,2.08268 c -0.91899,1.14548 -1.99594,3.2644 -2.39324,4.7087 l -0.72237,2.62599 3.01704,-3.51095 3.01705,-3.51097 0.58728,2.30365 c 0.323,1.26701 0.96389,2.07526 1.4242,1.7961 1.52708,-0.92611 5.60584,1.26929 4.92464,2.65069 -0.35852,0.72703 0.53119,-0.0961 1.97713,-1.82931 2.99577,-3.59084 3.27636,-3.07248 1.15541,2.13453 -0.81607,2.00346 -1.09688,3.64266 -0.62404,3.64266 1.35395,0 1.94428,7.70377 0.72441,9.45358 -0.60412,0.86658 0.37629,0.19252 2.1787,-1.49794 1.80241,-1.69044 3.54386,-3.93567 3.86989,-4.98938 0.72413,-2.34032 2.50278,-2.53807 2.50278,-0.27827 0,0.94584 0.48677,1.32898 1.15235,0.90704 l 1.15235,-0.73055 -0.44692,3.92679 -0.4469,3.92679 1.19248,-1.67286 1.19248,-1.67286 1.68609,1.91114 c 0.92734,1.05111 1.68607,2.90954 1.68607,4.12981 0,2.39844 1.5628,3.99778 2.4567,2.51415 0.80638,-1.33839 16.09935,-1.16019 18.24222,0.21255 l 1.82908,1.17172 v 3.48572 c 0,1.91715 -0.42927,3.21358 -0.95394,2.88096 -0.52466,-0.33263 -1.58966,0.32627 -2.36667,1.4642 -0.77702,1.13793 -2.72035,2.57893 -4.31852,3.20223 l -2.90577,1.13326 1.30183,-1.60907 c 1.62317,-2.00621 1.13917,-2.01712 -2.68432,-0.0605 l -3.02604,1.5485 -3.77523,-1.06927 c -3.19362,-0.90453 -6.31882,-3.89258 -5.55531,-5.31151 0.12098,-0.22485 -0.96164,0.91355 -2.40584,2.52978 l -2.62581,2.93858 -1.56213,-0.61489 c -0.85917,-0.3382 -2.14162,0.10136 -2.8499,0.97676 l -1.28776,1.59166 1.52523,6.16498 c 0.83888,3.39074 1.29245,7.41406 1.00795,8.94072 -2.43112,13.04541 24.25378,29.97773 39.85386,25.28838 z m -5.83562,-8.81865 -2.048,-0.90275 4.1472,-0.0738 c 2.28096,-0.0407 4.69248,-0.63318 5.35893,-1.31681 1.54051,-1.58021 2.51583,-0.63673 1.67242,1.61783 l -0.64566,1.72595 -3.21845,-0.0738 c -1.77013,-0.0406 -4.14004,-0.48004 -5.26644,-0.97656 z m -6.65622,-6.35397 c 4.8e-4,-1.22225 7.02209,-3.09962 11.59293,-3.09962 h 4.79129 l -10e-4,1.8382 -10e-4,1.8382 h -8.1909 c -4.50501,0 -8.1908,-0.25956 -8.19068,-0.57678 z m 7.68022,-9.11501 c -4.82261,-0.70431 -5.28242,-2.17535 -0.90137,-2.8837 2.18536,-0.35334 5.24057,-0.84718 6.78937,-1.09741 3.12094,-0.50422 3.2945,-0.2361 1.75598,2.71277 -1.05246,2.01722 -1.73762,2.13091 -7.64398,1.26834 z m -22.016,-33.89974 c 0,-0.7703 0.3072,-1.08542 0.68267,-0.70028 0.37546,0.38515 0.37546,1.01539 0,1.40054 -0.37547,0.38514 -0.68267,0.07 -0.68267,-0.70026 z m -16.896,-7.3528 c 0.34808,-0.57772 0.86327,-1.0504 1.14487,-1.0504 0.2816,0 0.22721,0.47268 -0.12087,1.0504 -0.34808,0.57773 -0.86326,1.0504 -1.14486,1.0504 -0.2816,0 -0.22722,-0.47267 0.12086,-1.0504 z m -5.632,-13.12998 c 0,-0.28885 0.2304,-0.5252 0.512,-0.5252 0.2816,0 0.512,0.23635 0.512,0.5252 0,0.28886 -0.2304,0.5252 -0.512,0.5252 -0.2816,0 -0.512,-0.23634 -0.512,-0.5252 z m 134.14399,79.83028 c 0,-0.28885 -0.2304,-0.5252 -0.512,-0.5252 -0.2816,0 -0.512,0.23635 -0.512,0.5252 0,0.28886 0.2304,0.52521 0.512,0.52521 0.2816,0 0.512,-0.23635 0.512,-0.52521 z M 172.03197,261.02401 c 0,-11.08063 -0.40353,-19.43237 -0.93891,-19.43237 -0.79507,0 -0.88099,13.21763 -0.22362,34.40055 0.37881,12.20697 1.16253,2.11623 1.16253,-14.96818 z m 663.03994,14.18038 c 0.34808,-0.57772 0.40247,-1.0504 0.12087,-1.0504 -0.2816,0 -0.79679,0.47268 -1.14487,1.0504 -0.34808,0.57773 -0.40246,1.0504 -0.12086,1.0504 0.2816,0 0.79678,-0.47267 1.14486,-1.0504 z m -540.33927,-9.9162 c 3.56217,-3.50073 7.14521,-7.66484 7.9623,-9.25356 l 1.48562,-2.88861 h -1.08633 -1.08633 l 1.06004,-2.03174 c 0.58301,-1.11745 1.04601,-3.12634 1.02888,-4.46419 l -0.0311,-2.43245 -1.15668,2.1008 c -1.35163,2.45485 -4.68328,6.70737 -9.90217,12.6391 -7.06168,8.02624 -7.64155,8.91876 -7.82258,12.04031 l -0.18164,3.13188 1.62668,-1.23828 c 0.89467,-0.68106 4.54118,-4.10252 8.10335,-7.60326 z m -9.03668,5.18941 c 0,-0.28886 0.2304,-0.5252 0.512,-0.5252 0.2816,0 0.512,0.23634 0.512,0.5252 0,0.28886 -0.2304,0.5252 -0.512,0.5252 -0.2816,0 -0.512,-0.23634 -0.512,-0.5252 z m 89.41692,-2.1008 0.59134,-5.25199 -0.87006,2.62599 c -0.86951,2.62432 -1.41306,9.1428 -0.69341,8.31566 0.20944,-0.24071 0.6469,-2.80106 0.97213,-5.68966 z m 461.49503,2.1008 c 0,-0.28886 -0.2304,-0.5252 -0.512,-0.5252 -0.2816,0 -0.512,0.23634 -0.512,0.5252 0,0.28886 0.2304,0.5252 0.512,0.5252 0.2816,0 0.512,-0.23634 0.512,-0.5252 z m 2.048,-6.30239 c 0,-0.28886 -0.2304,-0.5252 -0.512,-0.5252 -0.2816,0 -0.512,0.23634 -0.512,0.5252 0,0.28886 0.2304,0.5252 0.512,0.5252 0.2816,0 0.512,-0.23634 0.512,-0.5252 z M 287.6136,257.72648 c 1.4797,-0.98706 5.0958,-3.95768 8.03578,-6.60134 l 5.34542,-4.8067 0.66591,-3.1512 c 0.36625,-1.73315 1.39635,-4.56923 2.28912,-6.30239 0.89276,-1.73316 1.52846,-3.50571 1.41267,-3.939 -0.53217,-1.99127 1.63589,-0.50152 2.67515,1.83821 2.82826,6.3674 13.49831,-5.15789 13.49831,-14.58026 v -2.52357 l -2.60188,-0.66988 -2.60188,-0.66985 0.7121,-1.18191 0.7121,-1.1819 -1.19892,0.76008 c -0.65941,0.41803 -0.95678,1.16198 -0.66081,1.65321 0.29597,0.49122 -0.17094,1.62047 -1.03757,2.50943 l -1.57568,1.6163 0.68095,2.78307 0.68095,2.78307 -2.19635,-1.20576 -2.19636,-1.20576 -1.01432,2.73665 c -0.55788,1.50516 -1.01433,3.17854 -1.01433,3.71866 0,0.5401 -0.47701,0.98202 -1.06002,0.98202 h -1.06004 l 1.19332,-2.2872 1.19331,-2.28721 -0.56732,-6.94143 c -0.52669,-6.44433 -2.25558,-12.42469 -3.96465,-13.71403 -0.3977,-0.30002 -0.87393,-2.89976 -1.0583,-5.77719 l -0.33521,-5.23169 -1.15688,4.72679 -1.15689,4.7268 -0.21173,-5.7772 -0.21173,-5.77719 -0.81986,2.626 -0.81985,2.626 -0.1021,-4.46419 -0.10205,-4.4642 h -1.536 c -0.8448,0 -1.536,-0.52325 -1.536,-1.16278 0,-0.63952 -0.63922,-0.91116 -1.42049,-0.60363 -0.78126,0.30752 -2.94952,-0.51558 -4.81835,-1.82914 l -3.39787,-2.38828 -3.62964,0.86607 c -1.99631,0.47633 -5.7563,0.87733 -8.35555,0.89111 l -4.7259,0.0251 -2.9541,2.341 c -1.62475,1.28755 -3.57563,2.95488 -4.3353,3.70517 -1.65337,1.633 -2.70268,8.57417 -1.83331,12.12734 l 0.62256,2.54442 4.82202,0.67797 c 5.50619,0.77416 9.54593,4.02137 9.54593,7.67315 0,2.53941 -2.38842,3.37687 -3.65156,1.28036 l -0.70044,-1.16259 -0.896,1.42515 -0.896,1.42513 -0.77448,-1.22345 -0.77449,-1.22346 -1.7696,1.32732 c -0.97328,0.73002 -1.52341,1.57985 -1.22252,1.88849 0.30088,0.30865 -1.58973,0.53717 -4.20136,0.50781 -6.95335,-0.0781 -7.6208,2.13931 -3.43053,11.39711 1.06315,2.34885 1.93528,4.71224 1.93807,5.25199 0.003,0.53976 1.0396,2.27573 2.304,3.85772 l 2.29891,2.87634 5.12,0.52961 c 9.67517,1.00081 13.87382,1.68243 16.15073,2.62198 l 2.28127,0.94135 -6.912,0.0666 -6.912,0.0666 v 1.57559 1.5756 h 3.15733 3.15734 l -0.42074,1.313 c -0.23141,0.72215 -2.68901,1.54933 -5.46134,1.8382 l -5.04059,0.5252 -0.31813,2.29232 -0.31815,2.29233 2.04897,1.12485 c 5.97551,3.28044 12.94443,3.05203 18.42495,-0.60385 z m -19.58164,-21.01873 c -2.27119,-0.66176 -2.22814,-1.9066 0.26047,-7.5317 2.06998,-4.67887 4.09153,-5.06475 4.09153,-0.78101 0,3.02346 2.29669,5.07462 5.8371,5.21309 3.34183,0.1307 4.36937,2.49006 1.12517,2.58356 -1.29485,0.0373 -3.96707,0.28618 -5.93827,0.55302 -1.9712,0.26686 -4.3904,0.25022 -5.376,-0.037 z m 2.3808,-5.90895 c -0.12666,-1.25597 -1.53117,-1.01273 -1.9712,0.34138 -0.22528,0.69327 0.14336,1.07141 0.8192,0.84031 0.67584,-0.23108 1.19424,-0.76284 1.152,-1.18169 z m 21.00751,-11.41872 0.72516,-1.20359 -2.59556,0.66823 -2.59558,0.66825 -1.22932,-1.51943 c -0.67612,-0.83569 -0.93205,-2.01282 -0.56873,-2.61585 0.36333,-0.60302 -0.173,-1.14479 -1.19184,-1.20393 -1.01884,-0.0591 -0.23964,-0.51082 1.73156,-1.00373 1.9712,-0.49291 4.32535,-0.67019 5.23143,-0.39396 0.90609,0.27623 2.28849,-0.296 3.072,-1.27163 l 1.42457,-1.77387 -3.584,0.65888 c -1.9712,0.36238 -4.5056,0.91976 -5.632,1.23861 -1.1264,0.31886 -2.7392,0.10094 -3.584,-0.48432 l -1.536,-1.06405 1.536,-1.03431 c 0.8448,-0.56888 3.3792,-1.07773 5.632,-1.13077 2.2528,-0.0531 5.0176,-0.28746 6.144,-0.52092 2.41179,-0.49986 7.8666,1.52652 7.17943,2.66704 -0.26101,0.4332 -1.57241,0.57234 -2.91424,0.30923 l -2.43969,-0.47841 -0.6503,1.73836 -0.65032,1.73835 2.29756,-0.72438 c 1.26366,-0.39841 1.95596,-0.35464 1.53845,0.0973 -0.41751,0.4519 -0.23666,1.4674 0.40192,2.25667 1.48985,1.84144 0.61621,2.69726 -2.7534,2.69726 -1.47616,0 -2.92705,0.64993 -3.22422,1.4443 -0.29716,0.79436 -0.97899,1.4443 -1.51518,1.4443 -0.53618,0 -0.64855,-0.54162 -0.2497,-1.2036 z m 6.56369,-13.50199 c 0,-0.57772 0.488,-1.0504 1.08444,-1.0504 0.59644,0 0.79964,0.47268 0.45156,1.0504 -0.34808,0.57772 -0.83607,1.0504 -1.08443,1.0504 -0.24836,0 -0.45157,-0.47268 -0.45157,-1.0504 z m 79.25699,51.11892 0.69709,-2.97661 -1.06505,0.6752 c -0.58576,0.37137 -1.06504,1.90779 -1.06504,3.41427 0,3.29256 0.49049,2.91164 1.433,-1.11286 z m 237.88322,-2.00054 c -0.24493,-1.3066 -0.45464,-0.48492 -0.46601,1.82595 -0.0114,2.31088 0.18905,3.37992 0.44534,2.37564 0.2563,-1.00427 0.2656,-2.89499 0.0207,-4.20159 z m 84.93271,-0.55353 c 1.1268,-0.73882 1.00605,-5.95426 -0.23036,-9.95026 -0.71992,-2.32676 -2.34531,-2.38944 -3.19311,-0.12314 l -0.64625,1.72749 1.88363,1.41285 c 1.03599,0.77707 1.5828,1.72143 1.21513,2.09858 -0.92104,0.94477 -3.79,-1.64309 -3.79,-3.41863 0,-0.79585 -0.4608,-1.44699 -1.024,-1.44699 -0.5632,0 -1.024,-0.99593 -1.024,-2.21319 v -2.21317 l -1.66579,0.6557 c -0.91618,0.36065 -2.37087,0.0567 -3.23261,-0.67542 l -1.56684,-1.33111 0.76426,4.20159 c 0.42034,2.31087 1.17982,4.71776 1.68773,5.34864 0.50792,0.63087 0.64511,1.43259 0.30488,1.78159 -1.80744,1.85405 8.07271,5.74836 10.51733,4.14547 z m -321.17693,-6.02371 c 0,-0.28886 -0.2304,-0.5252 -0.512,-0.5252 -0.2816,0 -0.512,0.23634 -0.512,0.5252 0,0.28887 0.2304,0.5252 0.512,0.5252 0.2816,0 0.512,-0.23633 0.512,-0.5252 z m 317.08661,-9.40828 c -0.3335,-0.89149 -1.09784,-1.6209 -1.69853,-1.6209 h -1.09217 l 1.143,2.19077 c 1.27109,2.43628 2.60031,1.97656 1.6477,-0.56987 z m 138.59335,1.06709 c 0,-0.25476 -0.532,-0.80048 -1.18222,-1.2127 l -1.18221,-0.74948 0.73065,1.21269 c 0.72954,1.21085 1.63378,1.62567 1.63378,0.74949 z m -528.38395,-4.26359 c 0,-0.28886 -0.2304,-0.5252 -0.512,-0.5252 -0.2816,0 -0.512,0.23634 -0.512,0.5252 0,0.28886 0.2304,0.5252 0.512,0.5252 0.2816,0 0.512,-0.23634 0.512,-0.5252 z m 217.25092,-12.60478 -0.92788,-7.35279 -0.12952,8.05468 c -0.0713,4.43008 0.21606,8.92053 0.63846,9.97878 l 0.768,1.92411 0.28941,-2.62599 c 0.15918,-1.4443 -0.12814,-5.93476 -0.63847,-9.97879 z m -352.72024,4.46419 c -0.24407,-1.29986 -0.44377,-0.23633 -0.44377,2.3634 0,2.59974 0.1997,3.66327 0.44377,2.36339 0.24408,-1.29986 0.24408,-3.42692 0,-4.72679 z m 211.24531,6.0398 c 0,-0.28887 -0.2304,-0.5252 -0.512,-0.5252 -0.2816,0 -0.512,0.23633 -0.512,0.5252 0,0.28885 0.2304,0.5252 0.512,0.5252 0.2816,0 0.512,-0.23635 0.512,-0.5252 z m 230.39998,0 c 0,-0.28887 -0.2304,-0.5252 -0.512,-0.5252 -0.2816,0 -0.512,0.23633 -0.512,0.5252 0,0.28885 0.2304,0.5252 0.512,0.5252 0.2816,0 0.512,-0.23635 0.512,-0.5252 z m 139.39461,-1.31301 1.40538,-1.83819 -1.792,1.44161 c -1.70573,1.3722 -2.24817,2.23479 -1.40538,2.23479 0.21264,0 1.01904,-0.8272 1.792,-1.83821 z m 106.33879,-8.00302 c 2.51979,-1.80882 6.99166,-5.58225 9.93749,-8.3854 l 5.35606,-5.09663 -0.6009,-3.30655 c -0.3305,-1.81861 -0.95041,-3.70394 -1.37758,-4.18964 -0.78382,-0.89121 -17.38449,13.40633 -17.38449,14.97261 0,0.4641 -2.5344,2.56995 -5.632,4.67966 -5.80985,3.95698 -6.73819,5.76663 -4.10727,8.00638 0.83859,0.71393 1.20438,1.82973 0.81284,2.47957 -0.39153,0.64985 1.34154,-0.40534 3.85127,-2.34486 2.50975,-1.93952 6.6248,-5.00634 9.14458,-6.81514 z m -475.43387,5.44268 -0.53783,-1.37864 -0.0808,2.01326 c -0.0444,1.10729 0.19756,1.72769 0.53782,1.37865 0.34027,-0.34905 0.37664,-1.25502 0.0808,-2.01327 z m 344.38846,-2.02782 c 0,-0.57773 -0.4608,-0.75828 -1.024,-0.40122 -0.5632,0.35705 -1.024,1.12185 -1.024,1.69957 0,0.57772 0.4608,0.75828 1.024,0.40122 0.5632,-0.35705 1.024,-1.12185 1.024,-1.69957 z m -93.43999,-9.14432 c 5.34616,-3.61375 6.2223,-4.77678 4.44652,-5.90257 -0.93712,-0.5941 -9.6287,5.95273 -12.27135,9.24322 l -1.42485,1.77413 1.93685,-0.74043 c 1.06525,-0.40725 4.35603,-2.3757 7.31283,-4.37435 z m 69.88799,2.44071 c 0,-0.28887 -0.2304,-0.5252 -0.512,-0.5252 -0.2816,0 -0.512,0.23633 -0.512,0.5252 0,0.28885 0.2304,0.5252 0.512,0.5252 0.2816,0 0.512,-0.23635 0.512,-0.5252 z m 57.00267,-4.37667 c -0.37547,-0.38514 -0.68267,-0.07 -0.68267,0.70026 0,0.7703 0.3072,1.08542 0.68267,0.70028 0.37546,-0.38515 0.37546,-1.01539 0,-1.40054 z m -135.11165,-5.75085 c 9.79205,-7.49156 14.33087,-15.75409 15.06116,-27.4175 0.15397,-2.45901 0.61785,-6.62592 1.03084,-9.2598 l 0.75091,-4.7889 -3.57799,0.42848 -3.57798,0.42848 -0.45189,1.77258 c -0.24855,0.97492 -2.16125,2.31072 -4.25048,2.96846 l -3.79858,1.19587 1.13523,-1.40313 1.13522,-1.40312 -0.98626,-0.62527 c -0.54245,-0.34388 -1.19582,-0.0315 -1.45194,0.69429 l -0.46567,1.31954 -2.18179,-1.32189 -2.18179,-1.32191 v 1.50748 c 0,0.82911 0.8064,1.72365 1.792,1.98785 l 1.792,0.48038 -1.536,0.11662 c -2.38951,0.18144 -7.01023,-4.28575 -7.74912,-7.49164 l -0.66652,-2.89191 3.15352,-0.64697 c 3.96085,-0.81259 4.58863,-2.80241 3.66757,-11.62484 l -0.72724,-6.96605 -3.19111,-3.52116 -3.1911,-3.52116 -6.5506,1.85162 -6.5506,1.85162 -1.99601,2.7494 c -5.93518,8.17533 -5.32195,17.32812 1.22284,18.25146 5.92957,0.83655 7.20545,2.09426 7.95726,7.84391 0.66547,5.0894 -0.51196,5.36948 -3.31501,0.78853 l -2.06411,-3.37333 -2.54389,-0.19394 -2.54388,-0.19396 2.048,0.56958 c 2.45087,0.68163 4.608,2.36237 4.608,3.59036 0,0.48884 -0.64458,0.63509 -1.43242,0.32498 -0.78783,-0.31012 -1.73662,-0.0589 -2.10844,0.55817 -0.3718,0.61709 -0.16082,1.122 0.46886,1.122 0.62968,0 0.86008,0.47268 0.512,1.0504 -0.34808,0.57772 -2.18078,1.0504 -4.07268,1.0504 -9.07024,0 -8.74978,8.28477 0.67962,17.57023 l 3.44239,3.38985 4.07134,0.52944 c 9.67405,1.25803 12.83461,1.91824 13.36035,2.79085 0.52675,0.87426 -5.12958,1.48705 -10.82502,1.17275 l -2.56,-0.14126 2.04296,1.56588 c 1.12363,0.86125 2.96683,1.49492 4.096,1.40818 3.62732,-0.27863 4.02262,0.0421 1.99276,1.61703 -1.09324,0.84819 -3.13972,1.56447 -4.54772,1.59168 -1.408,0.0272 -3.18531,0.45592 -3.94958,0.95267 l -1.38957,0.90317 0.66969,2.16442 c 0.75836,2.45096 2.33154,3.05397 8.42139,3.22801 l 4.26391,0.12184 z m -21.63539,-18.59974 c -0.84247,-1.3983 1.08812,-9.26499 2.4922,-10.15513 0.54791,-0.34735 0.99618,0.0775 0.99618,0.94406 0,0.86657 -0.4608,1.86772 -1.024,2.22478 -1.44486,0.91599 -1.27404,3.28306 0.256,3.54741 0.704,0.12164 3.26922,0.38959 5.70049,0.59545 8.11521,0.68714 7.32719,2.3906 -1.54599,3.34195 l -6.1756,0.66212 z m -283.23159,22.42486 c 0,-0.28886 -0.2304,-0.5252 -0.512,-0.5252 -0.2816,0 -0.512,0.23634 -0.512,0.5252 0,0.28886 0.2304,0.5252 0.512,0.5252 0.2816,0 0.512,-0.23634 0.512,-0.5252 z m 379.90396,-4.93043 c 0,-0.54825 -0.6912,-0.2878 -1.536,0.57878 -0.8448,0.86658 -1.536,1.90358 -1.536,2.30445 0,0.40086 0.6912,0.14041 1.536,-0.5788 0.8448,-0.71919 1.536,-1.75619 1.536,-2.30443 z m -527.35995,0.72883 c 0,-0.28885 -0.2304,-0.52519 -0.512,-0.52519 -0.2816,0 -0.512,0.23634 -0.512,0.52519 0,0.28887 0.2304,0.5252 0.512,0.5252 0.2816,0 0.512,-0.23633 0.512,-0.5252 z m 89.08799,0 c 0,-0.28885 -0.2304,-0.52519 -0.512,-0.52519 -0.2816,0 -0.512,0.23634 -0.512,0.52519 0,0.28887 0.2304,0.5252 0.512,0.5252 0.2816,0 0.512,-0.23633 0.512,-0.5252 z m 3.072,0 c 0,-0.28885 -0.2304,-0.52519 -0.512,-0.52519 -0.2816,0 -0.512,0.23634 -0.512,0.52519 0,0.28887 0.2304,0.5252 0.512,0.5252 0.2816,0 0.512,-0.23633 0.512,-0.5252 z m 495.60029,-0.26259 c -0.008,-0.43329 -0.44903,-1.49086 -0.97868,-2.35015 l -0.96299,-1.56236 0.17258,2.35015 c 0.15295,2.08279 1.80854,3.54492 1.76909,1.56236 z m 92.67869,-0.2591 c 7.74103,-3.019 19.15212,-18.78123 18.86534,-26.05882 -0.0613,-1.55685 0.18786,-5.58631 0.55382,-8.95435 l 0.66535,-6.12369 -1.95429,-0.52423 c -1.07485,-0.28834 -2.72608,-2.02312 -3.6694,-3.85509 l -1.71513,-3.33084 0.49058,2.62599 0.49058,2.626 -1.99494,-2.47976 c -1.09722,-1.36388 -1.99494,-1.95473 -1.99494,-1.313 0,0.64171 -0.41766,1.16676 -0.92813,1.16676 -0.51047,0 -0.69875,-0.89979 -0.41839,-1.99954 l 0.50975,-1.99953 -1.88561,-0.5922 c -2.24858,-0.7062 -4.4271,-0.41599 -6.41164,0.85413 l -1.45401,0.93057 0.8602,-2.01052 c 1.21491,-2.83959 1.85983,-10.52211 1.13273,-13.49376 l -0.61312,-2.50586 -4.35589,-2.14639 c -4.31744,-2.12743 -5.647,-2.19488 -13.57189,-0.68847 -7.7502,1.47321 -9.99389,4.59137 -10.94015,15.20406 l -0.32385,3.63207 3.3949,0.7135 c 1.8672,0.39242 4.5168,1.79462 5.888,3.11601 l 2.4931,2.40252 -0.15342,4.28109 -0.15343,4.2811 -0.43172,-2.94311 -0.43172,-2.94313 -2.55351,-0.99587 c -3.33408,-1.3003 -8.5642,-1.27922 -8.5642,0.0345 0,0.5667 1.2672,1.3152 2.816,1.66332 1.5488,0.34812 3.5072,0.87979 4.352,1.1815 l 1.536,0.54856 -2.304,1.09983 c -1.2672,0.60489 -2.304,1.46271 -2.304,1.90624 0,0.44354 -1.41191,1.12452 -3.13758,1.51332 -1.82924,0.41212 -3.57881,1.70024 -4.1957,3.08906 l -1.05811,2.38216 1.55085,3.07631 c 0.85296,1.69196 3.40424,4.92146 5.66953,7.17667 2.26527,2.2552 3.86554,4.5205 3.55614,5.03403 -0.3094,0.51352 0.75538,0.2531 2.36617,-0.57871 3.66948,-1.89493 10.65135,-2.1748 14.40585,-0.57746 l 2.85885,1.21628 -4.096,0.78873 c -7.3617,1.41755 -8.07646,1.65657 -8.45714,2.82806 -0.22548,0.69385 1.39311,1.28827 4.04049,1.48382 l 4.41665,0.32623 -5.376,1.92262 -5.376,1.92261 v 1.63798 c 0,4.00437 11.03713,6.1295 17.91103,3.44868 z m -21.32838,-20.74887 c -0.76657,-1.2953 1.20894,-12.07493 2.43819,-13.30433 l 1.13853,-1.13865 -0.6891,3.84855 -0.68911,3.84856 2.0781,1.14084 c 1.14296,0.62746 3.4908,1.14084 5.21742,1.14084 1.72663,0 3.13932,0.47268 3.13932,1.0504 0,0.57771 -1.0368,1.06542 -2.304,1.08379 -1.2672,0.0184 -3.19847,0.72741 -4.29171,1.5756 -2.12868,1.65156 -5.27412,2.04457 -6.03764,0.7544 z m 14.67215,-21.27641 -1.11174,-0.70479 1.32848,-1.08779 c 1.83273,-1.50067 10.10449,-2.45891 12.56963,-1.45611 l 2.02515,0.82381 -2.04806,1.12435 c -2.51003,1.37796 -11.23845,2.26734 -12.76346,1.30053 z m -4.49004,-7.16644 c -0.87547,-1.45306 1.41496,-2.96097 5.69939,-3.75217 4.09764,-0.75671 6.14359,0.7513 3.18053,2.34428 -3.04482,1.63695 -8.24515,2.46144 -8.87992,1.40789 z m -319.39911,45.26922 c -0.25962,-1.02201 -0.48912,-0.44015 -0.50999,1.293 -0.0209,1.73316 0.19155,2.56934 0.47206,1.85819 0.28049,-0.71115 0.29756,-2.12919 0.038,-3.15119 z m -348.86959,2.3434 c 0,-0.28886 -0.2304,-0.5252 -0.512,-0.5252 -0.2816,0 -0.512,0.23634 -0.512,0.5252 0,0.28886 0.2304,0.5252 0.512,0.5252 0.2816,0 0.512,-0.23634 0.512,-0.5252 z m 207.53065,-1.22547 c -0.37547,-0.38514 -0.98987,-0.38514 -1.36534,0 -0.37546,0.38516 -0.0683,0.70027 0.68267,0.70027 0.75093,0 1.05813,-0.31511 0.68267,-0.70027 z m -201.18441,-4.82401 4.81023,-4.4545 0.66788,-4.89251 c 0.36732,-2.69089 0.34505,-6.40015 -0.0495,-8.2428 l -0.71736,-3.35028 -2.71276,0.67418 c -1.49201,0.3708 -3.86475,0.85586 -5.27275,1.07792 -5.31587,0.83834 -12.676,3.32272 -13.02493,4.3965 -0.49891,1.53531 4.66093,4.85227 6.45166,4.14737 0.84313,-0.33188 1.45327,0.0672 1.45327,0.95057 0,1.36493 -1.07827,1.81564 -7.424,3.10318 -0.9856,0.19998 -1.792,-0.006 -1.792,-0.45727 0,-0.45147 -1.45738,-1.54489 -3.23863,-2.42982 l -3.23863,-1.60895 -1.84034,1.17895 -1.84034,1.17895 1.56832,1.77766 c 2.37949,2.69708 14.33733,8.2312 16.75402,7.75379 1.19425,-0.23592 1.86222,0.0242 1.5202,0.59179 -0.33556,0.55694 -1.15427,0.73352 -1.81936,0.3924 -0.66507,-0.34113 -0.31476,0.12384 0.77848,1.03325 2.855,2.37496 3.61415,2.13617 8.96652,-2.82038 z m -5.44763,-12.43811 c 1.26985,-1.21352 2.57439,-1.93397 2.89902,-1.60099 0.91265,0.93618 -1.80526,3.8074 -3.6041,3.8074 h -1.6037 z m 209.02137,15.33639 c 0,-0.28885 -0.2304,-0.5252 -0.512,-0.5252 -0.2816,0 -0.512,0.23635 -0.512,0.5252 0,0.28887 0.2304,0.5252 0.512,0.5252 0.2816,0 0.512,-0.23633 0.512,-0.5252 z M 258.04796,204.3025 c 0,-0.28886 -0.2304,-0.5252 -0.512,-0.5252 -0.2816,0 -0.512,0.23634 -0.512,0.5252 0,0.28886 0.2304,0.52519 0.512,0.52519 0.2816,0 0.512,-0.23633 0.512,-0.52519 z m 138.2782,-2.17923 c 0.83708,-0.53458 4.62693,-3.30296 8.42189,-6.15194 l 6.8999,-5.17999 v -7.00811 c 0,-3.85447 0.22239,-10.0317 0.49422,-13.7272 l 0.49422,-6.71907 -0.83824,3.1512 c -1.69362,6.36694 -5.71621,12.75848 -11.89941,18.90717 -6.67155,6.6343 -12.82679,15.10041 -12.82679,17.64238 v 1.5079 l 3.86611,-0.7252 c 2.12636,-0.39885 4.55101,-1.16256 5.3881,-1.69714 z m -214.05419,1.12883 c 0,-0.28886 -0.2304,-0.5252 -0.512,-0.5252 -0.2816,0 -0.512,0.23634 -0.512,0.5252 0,0.28886 0.2304,0.5252 0.512,0.5252 0.2816,0 0.512,-0.23634 0.512,-0.5252 z m 340.19262,-6.56499 c -0.25073,-3.32189 -0.76047,-6.38198 -1.13277,-6.80022 -0.70327,-0.79003 -0.38948,6.34779 0.46056,10.47662 0.85238,4.14016 1.14243,2.55384 0.67221,-3.6764 z m 310.72999,2.18833 c -0.37547,-0.38514 -0.98987,-0.38514 -1.36534,0 -0.37546,0.38515 -0.0683,0.70026 0.68267,0.70026 0.75093,0 1.05813,-0.31511 0.68267,-0.70026 z m -185.19142,-9.66181 c 2.38393,-1.55067 4.28477,-6.55972 4.28477,-11.29117 v -4.60671 h -2.0224 -2.0224 l 0.61808,3.17005 0.61807,3.17006 -1.5482,-0.60941 -1.54821,-0.60943 -0.52469,3.47916 c -0.28859,1.91353 -0.8569,4.54267 -1.2629,5.84255 l -0.73821,2.36339 1.39943,-0.0161 c 0.76969,-0.008 2.00568,-0.41043 2.74666,-0.89241 z M 391.67995,186.0246 c 5.31587,-2.5315 14.053,-11.31535 15.83908,-15.92378 0.77009,-1.98697 1.82341,-4.18281 2.3407,-4.87966 0.5173,-0.69683 0.68619,-1.68912 0.37533,-2.20508 -0.77849,-1.29209 3.77995,-3.64996 6.1423,-3.17711 l 1.92659,0.38562 2.43517,-2.95694 c 1.41208,-1.71465 2.63072,-4.81189 2.90066,-7.3722 l 0.4655,-4.41527 -2.31348,-1.43773 -2.31349,-1.43773 -1.39062,1.95081 -1.39062,1.95082 1.05944,0.36225 c 1.89224,0.64701 1.12118,2.04434 -1.50056,2.71932 l -2.56,0.65908 v 2.67504 c 0,1.47127 -0.53316,3.69695 -1.18481,4.94596 l -1.18482,2.27091 -0.69816,-2.04164 c -0.38399,-1.1229 -0.25864,-3.81788 0.27856,-5.98883 0.5372,-2.17096 0.68455,-5.14129 0.32746,-6.60073 l -0.64924,-2.65352 -3.30849,-0.12439 c -1.81967,-0.0684 -3.7693,0.002 -4.3325,0.15612 -0.5632,0.15426 -3.328,0.93666 -6.144,1.73862 -6.2579,1.78218 -10.76394,1.06836 -14.69955,-2.3286 l -2.98383,-2.57546 -1.04648,1.30425 c -0.57556,0.71735 -1.34516,3.66766 -1.71021,6.55625 -0.36506,2.8886 -0.8694,6.28133 -1.12075,7.53941 -0.25136,1.25809 0.2666,3.0297 1.15102,3.93692 l 1.60803,1.64949 1.83543,-1.00762 1.83543,-1.00762 1.93346,1.5015 1.93345,1.50149 -2.69062,0.0334 c -1.47983,0.0184 -3.26768,0.74665 -3.97299,1.6184 -0.7053,0.87174 -3.07238,1.87861 -5.26018,2.23748 l -3.97781,0.65247 1.1071,1.36836 c 0.6089,0.75261 1.88276,1.36932 2.8308,1.37048 3.47373,0.004 11.02171,1.09042 14.0117,2.01626 l 3.072,0.95124 -4.352,0.77887 -4.352,0.77888 v 1.48327 c 0,0.81579 0.4608,1.48327 1.024,1.48327 0.5632,0 1.024,0.47268 1.024,1.0504 0,0.57772 -0.60312,1.0504 -1.34028,1.0504 -0.73716,0 -2.17603,0.62686 -3.19749,1.39304 l -1.85721,1.39302 0.70256,2.27062 c 0.4159,1.34422 2.03382,2.66573 3.96549,3.23903 4.5853,1.36087 4.83442,1.33866 9.40693,-0.83886 z m 353.79197,0.42112 c 0,-0.28886 -0.2304,-0.52519 -0.512,-0.52519 -0.2816,0 -0.512,0.23633 -0.512,0.52519 0,0.28887 0.2304,0.5252 0.512,0.5252 0.2816,0 0.512,-0.23633 0.512,-0.5252 z m -8.192,-2.10079 c 0,-0.28887 -0.2304,-0.5252 -0.512,-0.5252 -0.2816,0 -0.512,0.23633 -0.512,0.5252 0,0.28886 0.2304,0.5252 0.512,0.5252 0.2816,0 0.512,-0.23634 0.512,-0.5252 z m 137.21598,0 c 0,-0.28887 -0.2304,-0.5252 -0.512,-0.5252 -0.2816,0 -0.512,0.23633 -0.512,0.5252 0,0.28886 0.2304,0.5252 0.512,0.5252 0.2816,0 0.512,-0.23634 0.512,-0.5252 z m 8.10191,-2.00243 2.31491,-2.52763 0.55114,-6.23486 0.55115,-6.23486 -1.93755,0.14643 c -1.06567,0.0806 -2.55144,0.5356 -3.30172,1.01126 l -1.36417,0.86483 1.11443,-2.13601 c 0.61294,-1.17481 1.69572,-2.37624 2.40617,-2.66983 l 1.29173,-0.53382 -1.81395,-0.0829 c -1.01072,-0.0462 -2.35308,1.13084 -3.03148,2.65813 l -1.21753,2.74107 1.9472,1.46053 c 1.89238,1.41942 1.69156,1.66883 -1.51624,1.88311 -0.87011,0.0581 -1.67333,1.32155 -1.85278,2.91435 -0.17424,1.54645 -0.94975,3.35059 -1.72338,4.00919 l -1.4066,1.19746 1.69495,2.0306 c 2.26328,2.71145 4.49451,2.55942 7.29372,-0.49703 z m -282.53388,-7.45116 c 0,-0.28886 -0.2304,-0.5252 -0.512,-0.5252 -0.2816,0 -0.512,0.23634 -0.512,0.5252 0,0.28886 0.2304,0.5252 0.512,0.5252 0.2816,0 0.512,-0.23634 0.512,-0.5252 z m -415.39741,-8.26565 5.97857,-6.43992 0.48191,-5.7772 c 0.26506,-3.17746 0.86858,-8.11253 1.34115,-10.96684 l 0.8592,-5.18964 -1.54649,-2.42111 -1.54651,-2.4211 0.67855,-3.71023 c 0.3732,-2.04062 1.0886,-3.45026 1.58976,-3.13254 0.50118,0.31773 1.86029,-0.46728 3.02027,-1.74447 l 2.10904,-2.32214 v 1.71166 c 0,0.94142 0.41218,1.97298 0.91596,2.29235 0.52212,0.33102 0.79565,-3.93355 0.63616,-9.9183 l -0.2798,-10.49899 -1.27355,-1.57409 c -1.33174,-1.64603 -3.58585,-2.22838 -2.65679,-0.68639 0.29416,0.48824 0.75475,3.44248 1.02355,6.565 l 0.48872,5.67729 -1.53494,-2.1008 c -0.84421,-1.15543 -1.32448,-3.25573 -1.06726,-4.66732 0.25721,-1.41159 -0.40316,-4.23317 -1.4675,-6.2702 l -1.93517,-3.703684 2.17766,-1.195485 2.17765,-1.195496 -1.16235,-0.736884 c -0.63929,-0.405282 -1.17699,-0.118138 -1.1949,0.638106 -0.0194,0.819343 -0.63523,0.52604 -1.5239,-0.725805 -3.40363,-4.79463 -6.73669,-7.449996 -10.95506,-8.727639 l -4.4696,-1.353742 -3.02945,1.620426 -3.02943,1.620417 3.01172,0.007 3.01172,0.007 -1.98772,1.653485 c -1.09324,0.909422 -1.4329,1.367642 -0.75481,1.018269 1.63655,-0.843202 6.57649,0.465281 5.91315,1.566258 -0.28589,0.4745 0.44323,1.176256 1.62024,1.559458 1.17702,0.383202 1.92954,0.912661 1.67226,1.176575 -0.25728,0.263915 0.50824,1.603867 1.70116,2.977669 l 2.16895,2.497822 0.68311,-1.1338 c 0.37572,-0.623588 0.672,0.002 0.6584,1.39062 -0.0136,1.38843 0.23435,3.58604 0.55097,4.88357 l 0.57567,2.35915 -1.98841,1.09161 -1.98841,1.0916 -0.0503,-1.34997 c -0.0276,-0.74247 -1.80851,-3.18426 -3.95752,-5.4262 l -3.90729,-4.07626 -4.0673,-0.29717 c -5.15077,-0.376336 -13.63503,1.4096 -15.74628,3.31459 -0.88911,0.8022 -2.33028,1.45862 -3.20257,1.45862 -2.9527,0 -4.09814,3.25359 -2.99143,8.49717 0.0719,0.34056 1.30866,1.16977 2.74843,1.84267 1.43974,0.67291 2.3425,1.68028 2.0061,2.23862 -0.33639,0.55832 0.67443,1.2942 2.24626,1.63528 4.98776,1.08235 9.51388,3.55425 9.51388,5.19592 v 1.58686 l -3.84,-0.62468 c -2.112,-0.34361 -4.61611,-1.05005 -5.56468,-1.56989 -0.94857,-0.51985 -2.71497,-0.94518 -3.92532,-0.94518 -3.7922,0 -1.62176,2.52563 3.42759,3.98854 l 4.78241,1.38556 v 1.96416 1.96417 l -5.56074,0.71266 c -3.0584,0.39198 -6.161,0.50744 -6.89466,0.25659 -0.73366,-0.25086 -1.90597,0.67494 -2.60514,2.05732 l -1.27122,2.51344 1.90067,4.39576 c 1.04537,2.41767 2.49191,6.05015 3.21453,8.07215 0.72263,2.02202 1.83219,4.38542 2.46568,5.252 0.63349,0.86658 1.96322,3.22998 2.95495,5.252 3.81622,7.78087 4.94816,9.47657 7.12786,10.67793 3.56218,1.96333 8.09514,2.80208 11.98007,2.21672 l 3.584,-0.54001 z m -24.58378,-3.30752 c 0.001,-0.58804 -0.29334,-2.27856 -0.65501,-3.75671 l -0.65758,-2.68754 3.60394,-1.76291 3.60392,-1.76289 4.30699,0.65426 c 4.60278,0.69918 8.91497,2.94413 8.91497,4.64118 v 1.03536 l -5.49442,-0.66242 -5.49443,-0.6624 -0.65851,1.09296 c -0.37782,0.62709 0.70926,1.40111 2.55034,1.81591 1.9115,0.43066 3.47857,0.27529 3.87596,-0.38428 0.36691,-0.60897 1.25277,-0.73595 1.96856,-0.28216 l 1.30144,0.82507 -1.32847,1.12646 c -0.73066,0.61956 -4.59362,1.28684 -8.58437,1.48288 l -7.2559,0.35642 0.003,-1.06919 z m -3.41077,-4.1828 c 0,-0.28886 0.2304,-0.5252 0.512,-0.5252 0.2816,0 0.512,0.23634 0.512,0.5252 0,0.28885 -0.2304,0.5252 -0.512,0.5252 -0.2816,0 -0.512,-0.23635 -0.512,-0.5252 z m 6.4,-10.67445 c -1.83263,-0.75854 -1.60346,-2.49212 1.17473,-8.88583 l 2.45472,-5.64929 0.5866,2.626 c 0.32263,1.4443 0.71561,3.80769 0.87328,5.25199 l 0.28667,2.62599 3.072,0.34344 c 1.6896,0.18887 3.50976,0.77973 4.0448,1.31299 l 0.9728,0.96957 h -2.19236 c -1.2058,0 -2.47716,0.47268 -2.82524,1.0504 -0.64784,1.07526 -6.14913,1.30627 -8.448,0.35474 z m 17.408,-15.57593 c -4.84382,-2.15959 -3.35138,-6.36653 1.98694,-5.60081 l 2.36506,0.33923 0.32722,-2.36339 0.32722,-2.3634 h -1.65807 c -0.91193,0 -3.05918,0.74321 -4.77165,1.65159 -3.41124,1.80951 -6.00072,1.37281 -6.00072,-1.01196 0,-2.67868 10.65764,-5.0274 14.73567,-3.24744 l 1.93567,0.84487 -1.88063,1.41061 -1.88064,1.4106 0.99813,1.02385 c 0.54897,0.56312 0.82141,2.92474 0.60541,5.24807 l -0.39272,4.22419 -1.68445,-0.0411 c -0.92644,-0.0226 -3.18204,-0.70881 -5.01244,-1.5249 z m 8.13563,-1.05999 c 0.0209,-1.73315 0.25037,-2.31501 0.50999,-1.293 0.25963,1.022 0.24256,2.44004 -0.038,3.1512 -0.2805,0.71114 -0.49292,-0.12504 -0.47205,-1.8582 z m -22.64678,-0.0875 0.0808,-2.01327 0.53783,1.37865 c 0.2958,0.75825 0.25943,1.66421 -0.0808,2.01327 -0.34027,0.34903 -0.58228,-0.27137 -0.53782,-1.37865 z m 22.68472,-15.14328 c 0,-2.02202 0.21074,-2.84921 0.46831,-1.8382 0.25755,1.01101 0.25755,2.66538 0,3.67639 -0.25757,1.01101 -0.46831,0.18383 -0.46831,-1.83819 z m -3.29389,-1.25101 c -0.008,-0.97691 0.44512,-2.06833 1.00832,-2.42539 1.29598,-0.8216 1.29598,0.56893 0,2.626 l -0.99263,1.5756 -0.0157,-1.77621 z m 5.10432,-10.30337 c 0,-0.7703 0.3072,-1.08542 0.68267,-0.70027 0.37546,0.38514 0.37546,1.01538 0,1.40053 -0.37547,0.38515 -0.68267,0.07 -0.68267,-0.70026 z m -1.63378,-3.31349 -0.73065,-1.2127 1.18221,0.74949 c 1.18042,0.74834 1.58482,1.6759 0.73066,1.6759 -0.24836,0 -0.78036,-0.54572 -1.18222,-1.21269 z m -4.781,-6.409341 -1.80679,-3.40716 2.06279,2.479769 c 1.75527,2.110086 2.69341,4.36419 1.80678,4.34118 -0.1408,-0.004 -1.06905,-1.539858 -2.06278,-3.413789 z m -4.435,-4.094645 -0.73065,-1.212695 1.18221,0.749484 c 1.18042,0.748345 1.58482,1.675895 0.73066,1.675895 -0.24836,0 -0.78036,-0.545708 -1.18222,-1.212684 z M 627.3706,167.36348 c -0.37547,-0.38513 -0.68267,-0.07 -0.68267,0.70027 0,0.77029 0.3072,1.08541 0.68267,0.70027 0.37546,-0.38515 0.37546,-1.01539 0,-1.40054 z m -255.58342,-10.26545 1.10682,-6.14168 -1.16923,-0.74125 c -1.90471,-1.20752 -6.13917,0.0961 -7.25425,2.23342 l -1.03536,1.98447 1.75303,3.92679 c 3.72019,8.33321 4.91087,8.10555 6.59899,-1.26175 z m 500.66072,7.28933 c 0,-0.28886 -0.2304,-0.5252 -0.512,-0.5252 -0.2816,0 -0.512,0.23634 -0.512,0.5252 0,0.28885 0.2304,0.5252 0.512,0.5252 0.2816,0 0.512,-0.23635 0.512,-0.5252 z m -356.67645,-2.82295 -0.53783,-1.37864 -0.0808,2.01326 c -0.0444,1.10729 0.19756,1.72769 0.53782,1.37865 0.34027,-0.34905 0.37664,-1.25502 0.0808,-2.01327 z m 111.59466,-1.11605 c -0.28407,-0.72214 -0.5165,-0.1313 -0.5165,1.313 0,1.44429 0.23243,2.03514 0.5165,1.313 0.28407,-0.72215 0.28407,-1.90385 0,-2.626 z m 233.77415,-6.12346 -1.20048,-2.30094 -0.89825,1.45491 -0.89825,1.4549 -0.11776,-3.1512 -0.11775,-3.15119 -0.81986,2.62599 c -1.32561,4.24592 -1.14102,5.252 0.96357,5.252 1.09316,0 2.32952,0.56757 2.74748,1.26127 l 0.75991,1.26125 0.39093,-1.20303 c 0.21501,-0.66166 -0.14929,-2.23845 -0.80954,-3.50396 z m -660.77762,-5.86859 c -0.37547,-0.38514 -0.68267,-0.07 -0.68267,0.70027 0,0.77029 0.3072,1.0854 0.68267,0.70027 0.37546,-0.38515 0.37546,-1.01539 0,-1.40054 z m 189.43998,-6.30239 c -0.37547,-0.38514 -0.68267,-0.07 -0.68267,0.70027 0,0.77029 0.3072,1.0854 0.68267,0.70027 0.37546,-0.38515 0.37546,-1.01539 0,-1.40054 z m 33.12987,-0.84994 c -0.71241,-0.88055 -1.69968,-1.60099 -2.19392,-1.60099 -0.49424,0 -0.0923,0.86658 0.89338,1.92573 2.11179,2.26938 3.18296,2.00191 1.30054,-0.32474 z m 99.29178,-1.9922 c 0.008,-0.50403 -0.67046,-0.3323 -1.50905,0.38161 -0.8386,0.71393 -1.2418,1.76762 -0.896,2.34156 l 0.62872,1.04353 0.88033,-1.42515 c 0.48417,-0.78382 0.88737,-1.83752 0.896,-2.34155 z m -2.21342,-3.65697 0.15463,-4.04818 -3.82677,-1.63768 c -2.10472,-0.90072 -6.03752,-2.21918 -8.73956,-2.92993 -2.70204,-0.71074 -6.29489,-2.6166 -7.98412,-4.23526 -3.29906,-3.16123 -5.79443,-4.02311 -7.83909,-2.70752 -4.60541,2.96319 16.89095,19.13383 25.94414,19.51647 l 2.13612,0.0902 0.15465,-4.04819 z m -324.76821,1.24712 c -0.37547,-0.38514 -0.68267,-0.07 -0.68267,0.70026 0,0.7703 0.3072,1.08541 0.68267,0.70028 0.37546,-0.38515 0.37546,-1.01539 0,-1.40054 z m -1.024,-3.1512 c -0.37547,-0.38514 -0.68267,-0.07 -0.68267,0.70027 0,0.77029 0.3072,1.08541 0.68267,0.70028 0.37546,-0.38516 0.37546,-1.01539 0,-1.40055 z m 178.48475,-0.61272 c -0.038,-1.52965 -2.43131,-4.9894 -3.45155,-4.9894 -1.58284,0 -3.3417,2.69098 -2.89755,4.43318 l 0.47652,1.86921 h 2.95257 c 1.69676,0 2.93872,-0.55845 2.92001,-1.31299 z m 13.66151,-5.19354 c -0.19729,-6.05004 -2.88451,-12.28784 -4.55526,-10.57402 -0.47403,0.48625 -0.43515,2.41036 0.0864,4.27579 0.52156,1.86544 0.56763,3.15038 0.1024,2.85543 -1.06213,-0.67335 -2.33948,5.97138 -1.55237,8.07541 0.33259,0.88907 1.7719,1.51404 3.34861,1.45401 l 2.76525,-0.10529 z m 6.46034,3.82597 c -0.33541,-0.89657 -0.19366,-1.36631 0.31498,-1.04384 0.50865,0.32247 1.142,-0.007 1.40747,-0.73325 l 0.48265,-1.31954 1.14488,2.62599 1.14489,2.626 -0.59087,-4.72679 c -1.17673,-9.41319 -3.47651,-11.95818 -3.55947,-3.93899 l -0.0462,4.46419 -1.36424,-3.1512 -1.36422,-3.15119 -1.14958,2.95698 c -1.96456,5.05325 -1.30246,6.69405 2.79997,6.93887 l 1.38956,0.083 -0.60983,-1.63016 z m -199.6306,-1.1709 c -0.37547,-0.38514 -0.68267,-0.07 -0.68267,0.70026 0,0.7703 0.3072,1.08541 0.68267,0.70027 0.37546,-0.38514 0.37546,-1.01539 0,-1.40053 z m 209.91998,0 c -0.37547,-0.38514 -0.68267,-0.07 -0.68267,0.70026 0,0.7703 0.3072,1.08541 0.68267,0.70027 0.37546,-0.38514 0.37546,-1.01539 0,-1.40053 z m -243.71198,0 c -0.37547,-0.38514 -0.98987,-0.38514 -1.36534,0 -0.37546,0.38514 -0.0683,0.70026 0.68267,0.70026 0.75093,0 1.05813,-0.31512 0.68267,-0.70026 z m 251.22131,-5.01493 c 0,-2.56564 -0.4608,-4.95693 -1.024,-5.31399 l -1.024,-0.64917 v 5.31397 c 0,2.9227 0.4608,5.31399 1.024,5.31399 0.5632,0 1.024,-2.09916 1.024,-4.6648 z m -32.1536,-1.21743 c -0.36443,-0.97418 -0.89301,-1.53491 -1.17461,-1.24605 -0.2816,0.28886 -0.21382,1.32227 0.15061,2.29645 0.36443,0.97418 0.89301,1.5349 1.17461,1.24604 0.2816,-0.28886 0.21382,-1.32226 -0.15061,-2.29644 z m 29.0816,2.20583 c 0,-0.28886 -0.2304,-0.5252 -0.512,-0.5252 -0.2816,0 -0.512,0.23634 -0.512,0.5252 0,0.28887 0.2304,0.5252 0.512,0.5252 0.2816,0 0.512,-0.23633 0.512,-0.5252 z m -51.50132,-7.09019 c -0.24407,-1.29986 -0.44377,-0.23634 -0.44377,2.3634 0,2.59974 0.1997,3.66326 0.44377,2.36339 0.24408,-1.29986 0.24408,-3.42692 0,-4.72679 z m 12.24799,4.81433 c -0.37547,-0.38514 -0.68267,-0.07 -0.68267,0.70027 0,0.77028 0.3072,1.0854 0.68267,0.70026 0.37546,-0.38514 0.37546,-1.01539 0,-1.40053 z m -217.77064,-0.87533 c 0,-0.28887 -0.2304,-0.5252 -0.512,-0.5252 -0.2816,0 -0.512,0.23633 -0.512,0.5252 0,0.28886 0.2304,0.5252 0.512,0.5252 0.2816,0 0.512,-0.23634 0.512,-0.5252 z m 248.83197,-0.4632 c 0,-0.54363 -0.4608,-1.28055 -1.024,-1.6376 -0.5632,-0.35705 -1.024,0.0877 -1.024,0.9884 0,0.90068 0.4608,1.6376 1.024,1.6376 0.5632,0 1.024,-0.44478 1.024,-0.9884 z m -254.37365,-7.67739 -1.09411,-6.56499 -0.34973,3.05449 c -0.43246,3.77706 0.65284,10.07549 1.73613,10.07549 0.441,0 0.30946,-2.95425 -0.29229,-6.56499 z m 276.56032,4.81433 c -0.37547,-0.38515 -0.98987,-0.38515 -1.36534,0 -0.37546,0.38514 -0.0683,0.70026 0.68267,0.70026 0.75093,0 1.05813,-0.31512 0.68267,-0.70026 z m -271.35997,-2.1008 c -0.37547,-0.38514 -0.68267,-0.07 -0.68267,0.70027 0,0.77028 0.3072,1.0854 0.68267,0.70026 0.37546,-0.38514 0.37546,-1.01539 0,-1.40053 z m 272.43063,-2.78332 -1.55422,-2.43318 1.68537,-1.09052 1.68537,-1.09051 -1.3983,-1.72829 c -0.76908,-0.95056 -1.91789,-1.73882 -2.55293,-1.75166 -0.63504,-0.0128 -2.30662,-0.94769 -3.71462,-2.07743 -4.53813,-3.6413 -4.64848,-2.23257 -0.19013,2.42727 2.38274,2.49043 4.01752,4.85093 3.63281,5.24554 -0.3847,0.39462 0.13713,1.66575 1.15964,2.82473 2.50321,2.83732 3.15821,2.66612 1.24701,-0.32595 z m -11.02401,-3.19298 -1.27074,-1.20142 0.66271,1.92411 c 0.36449,1.05825 0.71617,2.47629 0.7815,3.15119 0.0653,0.67489 0.33894,0.34969 0.60803,-0.72268 0.26908,-1.07238 -0.0826,-2.49041 -0.7815,-3.1512 z m -54.21731,3.00017 c 0,-0.28886 -0.2304,-0.5252 -0.512,-0.5252 -0.2816,0 -0.512,0.23634 -0.512,0.5252 0,0.28886 0.2304,0.5252 0.512,0.5252 0.2816,0 0.512,-0.23634 0.512,-0.5252 z m 164.84326,-1.16445 c 2.26419,-0.92931 4.11672,-2.34735 4.11672,-3.1512 0,-0.80384 0.4608,-1.46154 1.024,-1.46154 0.5632,0 1.024,-0.49182 1.024,-1.09293 0,-0.60111 0.90301,-2.37366 2.00668,-3.939 4.20791,-5.968022 8.25213,-22.47022 6.59346,-26.904109 l -0.61587,-1.646296 -1.81763,2.302543 -1.81763,2.302542 -3.95563,-1.004749 -3.95563,-1.004759 -0.34139,-1.835132 -0.34138,-1.835142 2.8878,-1.126237 c 1.58829,-0.619437 3.94408,-0.919121 5.2351,-0.665966 l 2.34729,0.46028 -0.40491,-1.175296 -0.40491,-1.175295 -5.84802,0.210325 -5.84802,0.210336 0.40525,-1.260734 c 0.23326,-0.725705 2.82326,-1.392991 6.10314,-1.572397 l 5.6979,-0.311674 0.47531,-3.322011 c 0.69197,-4.8362 -0.28476,-7.401847 -4.76188,-12.508332 l -3.99298,-4.554275 -9.49072,-0.211826 -9.49073,-0.211826 -1.23368,1.524829 c -0.67852,0.838643 -1.98366,1.532978 -2.9003,1.542968 -2.25461,0.0245 -6.06773,4.311581 -7.44832,8.374027 l -1.12873,3.321371 1.0712,1.098807 c 0.58915,0.604348 0.8681,1.641706 0.61988,2.305233 l -0.45131,1.206415 7.4507,-0.385942 7.4507,-0.385942 1.94333,2.202724 c 2.22491,2.521868 1.38928,2.691614 -4.8388,0.98291 l -4.44614,-1.219815 -4.82015,1.45991 c -5.62591,1.703965 -8.02899,4.799531 -7.4883,9.64619 0.68496,6.139833 5.71664,21.361685 7.92364,23.970625 1.18701,1.40319 3.42936,4.07719 4.983,5.94223 5.42503,6.51235 10.97062,7.9819 18.48396,4.89816 z m -10.60919,-10.15394 -3.97389,-2.11585 2.43789,-1.38625 c 3.24151,-1.843184 11.28014,-1.831474 13.74861,0.02 l 1.97412,1.48072 -1.93712,2.19567 -1.93712,2.19567 -3.16929,-0.13708 c -1.7431,-0.0754 -4.95755,-1.08922 -7.1432,-2.25293 z m 8.57733,-0.49859 c -0.002,-0.4333 -1.62259,-0.87289 -3.60014,-0.97688 -1.99948,-0.10515 -3.33429,0.24455 -3.00698,0.7878 0.69867,1.15961 6.61375,1.32888 6.60712,0.18908 z m -3.55367,-9.673464 c -0.36224,-0.601218 -1.64518,-1.093128 -2.85098,-1.093128 h -2.19237 l 1.15383,-1.183565 1.15383,-1.183576 2.89097,0.825333 c 1.59003,0.453941 3.81257,0.709336 4.93897,0.567559 l 2.048,-0.257775 -1.024,1.023159 c -1.68242,1.681035 -5.41172,2.474649 -6.11825,1.301993 z m -18.20764,-17.808012 -2.82188,-1.855752 2.03059,-1.885041 2.03059,-1.885031 5.3993,1.540309 c 5.83811,1.665485 7.63384,4.32677 3.65687,5.419478 -3.89263,1.069527 -7.31493,0.626107 -10.29547,-1.333963 z m 9.98989,-0.0915 c 0.34808,-0.577718 0.14488,-1.050398 -0.45156,-1.050398 -0.59644,0 -1.08444,0.47268 -1.08444,1.050398 0,0.577718 0.20321,1.050398 0.45157,1.050398 0.24836,0 0.73635,-0.47268 1.08443,-1.050398 z m -13.824,-3.676394 c 0,-0.288854 0.2304,-0.525199 0.512,-0.525199 0.2816,0 0.512,0.236345 0.512,0.525199 0,0.288864 -0.2304,0.525199 -0.512,0.525199 -0.2816,0 -0.512,-0.236335 -0.512,-0.525199 z m -347.48178,38.07694 c -0.28407,-0.72214 -0.5165,-0.13129 -0.5165,1.31301 0,1.4443 0.23243,2.03515 0.5165,1.31299 0.28407,-0.72214 0.28407,-1.90384 0,-2.626 z m 39.25781,-1.31299 c 0,-0.28886 -0.2304,-0.5252 -0.512,-0.5252 -0.2816,0 -0.512,0.23634 -0.512,0.5252 0,0.28886 0.2304,0.5252 0.512,0.5252 0.2816,0 0.512,-0.23634 0.512,-0.5252 z m -40.01279,-8.14059 1.3568,-1.312993 0.4902,1.377203 0.4902,1.37721 1.6858,-1.50274 c 0.92719,-0.826512 3.0682,-1.999787 4.75779,-2.607285 l 3.072,-1.104537 -3.80525,-0.0829 c -3.83957,-0.0837 -11.04274,2.729833 -11.04274,4.313222 0,1.26184 1.4471,1.04098 2.9952,-0.45715 z m 48.20479,-1.312993 c 0,-0.288864 -0.2304,-0.525199 -0.512,-0.525199 -0.2816,0 -0.512,0.236335 -0.512,0.525199 0,0.288854 0.2304,0.525199 0.512,0.525199 0.2816,0 0.512,-0.236345 0.512,-0.525199 z M 150.25065,92.85084 c -0.34027,-0.349043 -1.22347,-0.386362 -1.96267,-0.0829 l -1.344,0.551688 1.96267,0.0829 c 1.07946,0.0456 1.68427,-0.202655 1.344,-0.551688 z m 13.95738,-1.985369 c 0.32294,-0.863272 2.10024,-2.515888 3.94956,-3.672474 l 3.36238,-2.102877 -2.1255,-0.004 c -1.16902,-0.002 -3.05888,1.059599 -4.19966,2.359472 -2.80721,3.198653 -3.722,4.989386 -2.54883,4.989386 0.53619,0 1.23911,-0.706305 1.56205,-1.569577 z m 321.47002,-9.984804 0.58876,-6.827588 -0.88546,2.100796 c -0.83915,1.990919 -1.44123,12.918603 -0.66073,11.992052 0.20278,-0.240715 0.63361,-3.510077 0.95743,-7.26526 z m 53.66856,-6.564984 c -0.24407,-1.299873 -0.44377,-0.236345 -0.44377,2.363391 0,2.599737 0.1997,3.663265 0.44377,2.363401 0.24408,-1.299873 0.24408,-3.426929 0,-4.726792 z m -8.91467,2.363391 c 0,-0.577718 -0.2032,-1.050398 -0.45156,-1.050398 -0.24836,0 -0.73636,0.47268 -1.08444,1.050398 -0.34808,0.577718 -0.14487,1.050399 0.45157,1.050399 0.59644,0 1.08443,-0.472681 1.08443,-1.050399 z m -43.52,-5.251991 c 0.34808,-0.577718 0.40247,-1.050398 0.12087,-1.050398 -0.2816,0 -0.79679,0.47268 -1.14487,1.050398 -0.34808,0.577718 -0.40246,1.050398 -0.12086,1.050398 0.2816,0 0.79678,-0.47268 1.14486,-1.050398 z m 51.8272,-6.604384 -1.1392,-1.168565 v 1.610616 c 0,2.088037 1.37698,3.500508 1.88587,1.93448 0.21589,-0.664376 -0.12011,-1.733814 -0.74667,-2.376531 z m -65.96932,-2.586606 c -0.25757,-1.010999 -0.46831,-0.183816 -0.46831,1.838202 0,2.022018 0.21074,2.849201 0.46831,1.838202 0.25755,-1.011009 0.25755,-2.665395 0,-3.676404 z m -3.30425,-1.621057 -0.58939,-2.40886 2.22917,-2.90698 c 1.22604,-1.598847 2.83119,-2.670014 3.56701,-2.38037 0.73581,0.289634 1.94753,-0.242815 2.69272,-1.183216 l 1.35486,-1.709825 -2.048,0.786744 -2.048,0.786744 2.304,-2.206594 c 3.39051,-3.247173 2.81336,-3.530837 -1.536,-0.754925 -4.35915,2.782163 -7.90643,9.071373 -6.91812,12.265567 0.90321,2.919099 1.71853,2.682094 0.99175,-0.288285 z m 70.18237,-0.532259 c 0,-1.039888 -0.53343,-2.437899 -1.1854,-3.106675 l -1.1854,-1.215955 1.33132,-1.645506 c 1.66177,-2.053918 1.25409,-2.473549 -3.13119,-3.222983 l -3.50933,-0.599748 2.048,1.376601 c 1.1264,0.757135 2.06223,1.849282 2.07961,2.427 0.15482,5.145054 3.55239,10.871385 3.55239,5.987266 z m -68.608,-0.735274 c 0,-0.288864 -0.2304,-0.525199 -0.512,-0.525199 -0.2816,0 -0.512,0.236335 -0.512,0.525199 0,0.288864 0.2304,0.525199 0.512,0.525199 0.2816,0 0.512,-0.236335 0.512,-0.525199 z m 1.536,-2.625996 c 0.34808,-0.577718 0.40247,-1.050398 0.12087,-1.050398 -0.2816,0 -0.79679,0.47268 -1.14487,1.050398 -0.34808,0.577718 -0.40246,1.050398 -0.12086,1.050398 0.2816,0 0.79678,-0.47268 1.14486,-1.050398 z m 19.968,0.525199 c 0,-0.288864 -0.2304,-0.525199 -0.512,-0.525199 -0.2816,0 -0.512,0.236335 -0.512,0.525199 0,0.288854 0.2304,0.525199 0.512,0.525199 0.2816,0 0.512,-0.236345 0.512,-0.525199 z m -17.408,-2.100796 c 0,-0.288864 -0.2304,-0.5252 -0.512,-0.5252 -0.2816,0 -0.512,0.236336 -0.512,0.5252 0,0.288854 0.2304,0.525199 0.512,0.525199 0.2816,0 0.512,-0.236345 0.512,-0.525199 z m 18.09067,-3.326262 c -0.37547,-0.385152 -0.98987,-0.385152 -1.36534,0 -0.37546,0.385142 -0.0683,0.700266 0.68267,0.700266 0.75093,0 1.05813,-0.315124 0.68267,-0.700266 z m 5.46133,-0.350132 c 0,-0.577718 -0.664,-1.050399 -1.47556,-1.050399 -0.81156,0 -1.76036,0.472681 -2.10844,1.050399 -0.34808,0.577718 0.31593,1.050398 1.47557,1.050398 1.15964,0 2.10843,-0.47268 2.10843,-1.050398 z m -10.58133,-2.801062 c -0.37547,-0.385152 -0.68267,-0.07 -0.68267,0.700265 0,0.770294 0.3072,1.085408 0.68267,0.700266 0.37546,-0.385152 0.37546,-1.015389 0,-1.400531 z m 9.04533,-0.350133 2.048,-0.902742 -1.90156,-0.0738 -1.90155,-0.0738 0.61114,-1.633666 0.61113,-1.633656 -3.82957,-1.667685 c -2.10628,-0.917231 -3.2699,-1.870272 -2.58584,-2.117877 2.24168,-0.811393 6.75362,2.257704 8.40324,5.716032 0.88936,1.864462 1.98981,3.40067 2.44545,3.41379 0.45564,0.0131 0.54364,-0.448821 0.19556,-1.026539 -0.34808,-0.577718 -0.0424,-1.050399 0.67942,-1.050399 0.72175,0 0.28814,-0.735824 -0.96357,-1.635166 -1.25171,-0.899331 -2.27585,-2.332201 -2.27585,-3.184154 0,-0.851952 -0.6912,-1.821082 -1.536,-2.153615 -0.8448,-0.332543 -1.536,-1.263064 -1.536,-2.067838 0,-2.064627 -2.98716,-1.816642 -7.68,0.637587 -2.20937,1.155436 -4.72599,2.139186 -5.59251,2.186105 -0.86652,0.0469 -0.19309,0.710225 1.49651,1.47401 1.6896,0.763784 3.4176,1.170175 3.84,0.903101 0.4224,-0.267085 0.768,0.251305 0.768,1.151976 0,0.900681 0.5101,1.637596 1.13356,1.637596 0.62345,0 0.87732,-0.684946 0.56415,-1.522108 l -0.5694,-1.522099 1.73984,0.669206 c 0.95692,0.368063 2.27657,1.404531 2.93257,2.303253 l 1.1927,1.634036 -1.1927,0.778364 c -1.60405,1.046808 0.35068,0.885312 2.90328,-0.239855 z m 40.448,0.587188 c 0,-0.254765 -0.532,-0.800474 -1.18222,-1.212695 l -1.18221,-0.749485 0.73065,1.212695 c 0.72954,1.210845 1.63378,1.625667 1.63378,0.749485 z m -0.45156,-4.788781 c 0.87804,0 1.32595,-0.448941 0.99535,-0.99764 -0.34216,-0.567908 -2.13187,-0.0712 -4.15491,1.153226 -1.9546,1.182986 -3.30731,2.560038 -3.00601,3.060127 0.30131,0.50009 1.45263,-0.0189 2.55848,-1.153236 1.10586,-1.134367 2.72905,-2.062477 3.60709,-2.062477 z m 3.01156,2.100796 c 0.34808,-0.577718 -0.11272,-1.050398 -1.024,-1.050398 -0.91128,0 -1.37208,0.47268 -1.024,1.050398 0.34808,0.577718 0.80888,1.050398 1.024,1.050398 0.21512,0 0.67592,-0.47268 1.024,-1.050398 z m -33.28,-0.46321 c 0,-0.254765 -0.532,-0.800474 -1.18222,-1.212695 l -1.18221,-0.749485 0.73065,1.212695 c 0.72954,1.210845 1.63378,1.625667 1.63378,0.749485 z m 25.1395,-2.773463 0.68437,-1.135876 -2.41593,0.348072 -2.41594,0.348083 v -1.575597 c 0,-0.866582 1.0368,-1.726644 2.304,-1.911261 1.2672,-0.184606 2.304,-0.775454 2.304,-1.312992 0,-1.563018 -3.72338,-1.127947 -5.12,0.598257 -1.49057,1.842332 -3.53513,2.143676 -2.46222,0.362903 l 0.73066,-1.212695 -1.1375,0.721135 c -0.62562,0.396622 -0.87029,1.4354 -0.54371,2.308392 0.32658,0.872992 0.82211,1.353042 1.10118,1.066778 0.27908,-0.286264 1.17666,0.166027 1.99464,1.005099 1.75826,1.803583 4.01797,1.980539 4.97645,0.389702 z m -30.2595,-0.439721 c 0,-0.288864 -0.2304,-0.525199 -0.512,-0.525199 -0.2816,0 -0.512,0.236335 -0.512,0.525199 0,0.288854 0.2304,0.525199 0.512,0.525199 0.2816,0 0.512,-0.236345 0.512,-0.525199 z m 7.168,-2.351801 c 0,-0.658836 -4.14388,-7.626982 -4.53568,-7.626982 -0.80271,0 -0.30408,6.958696 0.57661,8.047233 0.95286,1.177716 3.95907,0.858612 3.95907,-0.420251 z m 10.24,1.301403 c 0,-0.288864 -0.2304,-0.525199 -0.512,-0.525199 -0.2816,0 -0.512,0.236335 -0.512,0.525199 0,0.288854 0.2304,0.525199 0.512,0.525199 0.2816,0 0.512,-0.236345 0.512,-0.525199 z m 15.36,0 c 0,-0.288864 -0.2304,-0.525199 -0.512,-0.525199 -0.2816,0 -0.512,0.236335 -0.512,0.525199 0,0.288854 0.2304,0.525199 0.512,0.525199 0.2816,0 0.512,-0.236345 0.512,-0.525199 z m -18.90189,-1.645486 c 1.05068,-1.743874 0.10763,-1.985699 -1.36248,-0.349373 -0.7262,0.808314 -0.8686,1.46966 -0.31643,1.46966 0.55216,0 1.30767,-0.50413 1.67891,-1.120287 z m 16.85389,0.595088 c 0,-0.288864 -0.2304,-0.525199 -0.512,-0.525199 -0.2816,0 -0.512,0.236335 -0.512,0.525199 0,0.288854 0.2304,0.525199 0.512,0.525199 0.2816,0 0.512,-0.236345 0.512,-0.525199 z m -13.824,-1.575598 c -0.34808,-0.577718 0.11272,-1.050398 1.024,-1.050398 0.91128,0 1.37208,0.47268 1.024,1.050398 -0.34808,0.577718 -0.14487,1.050399 0.45157,1.050399 1.25412,0 1.30701,-0.283615 0.47007,-2.520858 l -0.61436,-1.642266 -1.94564,1.068118 c -2.09395,1.149546 -2.63529,3.095006 -0.8612,3.095006 0.59644,0 0.79964,-0.472681 0.45156,-1.050399 z m -23.98048,-2.824441 c 2.42234,0.649786 3.12843,-1.530739 1.03036,-3.181945 l -1.62588,-1.279593 1.536,0.0404 c 2.14191,0.0564 5.99899,1.827232 4.18133,1.91973 -0.79786,0.0406 -1.20941,0.321294 -0.91455,0.623758 1.06557,1.093047 3.75835,-0.760015 3.21501,-2.212455 l -0.5569,-1.488669 h -4.25842 c -4.78273,0 -11.22914,3.065597 -11.71298,5.570115 l -0.31851,1.648746 3.77913,-1.070368 c 2.07852,-0.588698 4.61896,-0.845083 5.64541,-0.569738 z m -4.17952,-1.902351 c 0,-0.288864 0.2304,-0.525199 0.512,-0.525199 0.2816,0 0.512,0.236335 0.512,0.525199 0,0.288854 -0.2304,0.525199 -0.512,0.525199 -0.2816,0 -0.512,-0.236345 -0.512,-0.525199 z m 37.376,0.525199 c 0.3529,-0.585738 -0.41309,-1.043288 -1.73156,-1.034318 l -2.36444,0.0161 1.536,1.018229 c 1.9054,1.263104 1.79898,1.263104 2.56,0 z m 2.56,-0.525199 c 0,-0.288864 -0.2304,-0.525199 -0.512,-0.525199 -0.2816,0 -0.512,0.236335 -0.512,0.525199 0,0.288854 0.2304,0.525199 0.512,0.525199 0.2816,0 0.512,-0.236345 0.512,-0.525199 z m -11.264,-1.050398 c 0,-0.288864 -0.2304,-0.525199 -0.512,-0.525199 -0.2816,0 -0.512,0.236335 -0.512,0.525199 0,0.288854 0.2304,0.525199 0.512,0.525199 0.2816,0 0.512,-0.236345 0.512,-0.525199 z"
       id="path53464"
       sodipodi:nodetypes="cccccccccccccscccsccsscsscsssssssssscsscssccscsscccccsscsscsssssscccssscsscsscssscccccsscsssssccsssscsssssscssscsssscsssssscsccsscccssssssssscccsssssssssssssssssscsssssssssssscsscssccsccssscssssssssssssssssssssssccsscsscssssssssscsscsssssssscccccsscsscccsssscsscsscssscccssscssssscsscsscssscsscccsssscssssssscsscccssssssssssscccccsssscsssscsscssscsscsssscccsscssccscccsccssssssssssssssssssssssssssssssssssscccsscssscssssssssscssssssssssssssscssssscccccssscccccssscccssscccccccccsssscsscssscssscccccsscscscsscccccccsscccsssssssssssssssccccsssssscssscssssscccssssssscsssssscssssssssssscssssscsscssssssssssscsssscssssssssccscssssssssssssssssscssssscssssssssccssscsssssssscsssssssssssssscccsscccsscccsscsscsscccccsssscccsssssssscssscssssscsscsssssssscsssssssssssssssssssssssssscscscssscsscccsssscsscsscssscsscccccsssscsssscssssscssscccssssscccssssssscsscssssssssssssssssssssccsscsssssssscccsssssscssscssssssssssssscsscssscssssssssssssssssscccccccssccssssssscsscccccsscsscssscscsscsssscccccssscscscccssssscsssssssssssssssssssccccsscsscsscsssscsscsssssccsscccssscssscssscssscccsssscccccsssssscsssccccscssssssssccssscccssscsssssscccscccsscccsssscsscccssssssscsscsscssssscccsssscccsscssscscccccscscsssssssccsssssscsssscscsscsssssssscsscsssssssccssscssssscccccssscsssssssssssscscsscscccssssscccssssssssssscsssssssscsssccccsscccssccssssssssssssssscsssssssssssssssssssssssssssssssscsssssssssssscccsssssssscssssssssssssssscccccccsscccccsscsscccssscsscccsscsssssccsscccssccsscsscccsscssscccssssssssssssssssssssssccccssccsscssssssccsscsccssccscsssssssssssssssssscsssssssscssscccsssssscsscssssssssssssssssssssssssssssssssssssccccccssssssssssssssssscsscsscsscssssssssssssssscssscccssssscsssssssssssssssssssssssssssssssssssssscssssscsssscsscsssssssssscsssssssssssss" /></g><g
     inkscape:groupmode="layer"
     id="layer3"
     inkscape:label="ATEEZ"><path
       style="fill:#ffffff;stroke-width:1.01964"
       d="m 578.64937,367.22718 c 1.38925,-1.35342 12.82163,-11.90665 25.40529,-23.45162 l 22.87939,-20.99089 h 13.06278 13.06279 v 3.35809 c 0,1.84693 -0.91767,12.26555 -2.03927,23.15245 -1.12161,10.88691 -2.03927,19.92901 -2.03927,20.09355 0,0.16455 -4.81778,0.29918 -10.70618,0.29918 h -10.70618 v -3.05891 -3.05892 h -11.53505 c -11.48571,0 -11.54758,0.0131 -14.46567,3.05892 -2.90974,3.03711 -3.01085,3.05891 -14.18758,3.05891 h -11.25698 z m 51.50378,-20.36134 c 1.22608,-8.17602 0.48685,-8.38031 -6.12124,-1.69155 l -6.0859,6.16019 h 5.76852 5.7685 z m 25.97523,22.05737 c 0.005,-0.42061 4.08042,-7.64728 9.05559,-16.05927 l 9.04576,-15.29454 -8.54579,-0.29461 c -5.25887,-0.1813 -8.54577,-0.71826 -8.54577,-1.39607 0,-0.60581 1.63914,-3.7998 3.64254,-7.09776 l 3.64255,-5.99629 h 32.23885 32.23886 l 31.31572,8.13306 31.31572,8.13306 40.59327,-8.13306 40.59326,-8.13306 h 31.38992 c 17.26446,0 31.38994,0.26028 31.38994,0.57841 0,0.31813 -1.72064,3.5212 -3.82364,7.11793 l -3.82364,6.5395 -32.11853,0.14017 c -17.66519,0.0771 -33.49504,0.49043 -35.17744,0.91854 -1.68239,0.42809 12.19739,0.83264 30.84398,0.89899 20.55772,0.0731 33.90291,0.5005 33.90291,1.08565 0,0.53076 -1.62791,3.74261 -3.61757,7.13745 l -3.61758,6.17245 -34.87368,0.12762 c -21.02085,0.0769 -33.05107,0.45194 -30.28532,0.94406 2.52359,0.44903 17.81812,0.85044 33.98786,0.89201 16.16972,0.0416 29.24656,0.42807 29.05962,0.8589 -0.18694,0.43083 -1.937,3.64269 -3.88904,7.13745 l -3.54918,6.35414 -31.62826,-0.0123 -31.62829,-0.0123 -30.98867,-8.14056 -30.98869,-8.14057 -41.27956,8.15288 -41.27955,8.15286 h -22.303 c -12.26665,0 -22.29857,-0.34412 -22.29315,-0.76473 z m 57.59959,-14.52981 c 1.83273,-0.46636 -3.37853,-0.82673 -13.00037,-0.89901 -10.10684,-0.076 -16.05926,0.2573 -16.05926,0.89901 0,1.19582 24.3601,1.19582 29.05963,0 z m 10.70617,-16.31418 c -3.78189,-1.21117 -29.33072,-1.21117 -30.07927,0 -0.41121,0.66537 5.14758,0.98433 15.99909,0.91799 9.91775,-0.0606 15.60047,-0.43112 14.08018,-0.91799 z m 191.69157,31.0303 c 0,-0.31813 1.72063,-3.4977 3.82363,-7.06573 l 3.82364,-6.48731 16.63027,-8.587 16.63028,-8.58698 -10.33555,-0.56952 c -5.68455,-0.31325 -10.54016,-0.77414 -10.79024,-1.02421 -0.25008,-0.25008 1.27625,-3.49906 3.39182,-7.21996 l 3.8465,-6.76527 27.7851,-0.009 c 15.28176,-0.006 27.78506,0.24029 27.78506,0.54554 0,0.30524 -1.6902,3.49362 -3.7559,7.08529 l -3.7559,6.53031 -16.56397,8.46416 -16.564,8.46414 10.03927,0.50982 c 5.52159,0.2804 10.36219,0.83308 10.7569,1.22817 0.39471,0.39509 -1.03922,3.72165 -3.18649,7.39236 l -3.90414,6.67376 h -27.82815 c -15.30547,0 -27.82813,-0.26028 -27.82813,-0.57841 z"
       id="path4836"
       sodipodi:nodetypes="cscccsssscccscsccsscccscscssscccccccssscsssssccsssscccccccsccscsssscssscccssscssscccssccsss" /></g><g
     inkscape:groupmode="layer"
     id="layer2"
     inkscape:label="Lyrics"><path
       d="m 941.26623,474.43467 c -7.09536,-1.03208 -17.49134,-4.23792 -23.21987,-7.16039 -3.5886,-1.83078 -3.84332,-2.20904 -2.52601,-3.75112 0.80578,-0.94328 4.56052,-5.50043 8.34387,-10.12703 6.03836,-7.38421 9.75474,-10.26531 9.75474,-7.5623 0,0.46733 0.57355,0.88828 1.27454,0.93545 0.70101,0.0472 4.10485,1.27385 7.56413,2.72598 8.37757,3.51671 17.69953,4.54034 19.6747,2.16044 1.84997,-2.22908 1.09068,-2.72374 -9.65011,-6.28666 -18.62869,-6.1795 -23.21536,-10.43412 -23.08423,-21.41307 0.27038,-22.63622 29.48896,-37.46998 57.63493,-29.26024 7.1436,2.08366 17.07108,6.57516 16.71948,7.56443 -0.1586,0.44647 -3.88308,4.96541 -8.27658,10.04207 -7.6186,8.8033 -11.0018,10.98844 -12.1958,7.87697 -0.6595,-1.71864 -12.91695,-5.78415 -17.43905,-5.78415 -3.48295,0 -6.38104,2.17025 -5.27909,3.95324 0.33436,0.54101 4.89195,2.41089 10.12797,4.15527 11.94957,3.98102 19.74687,8.63306 22.29857,13.30385 2.549,4.66588 2.0312,14.98979 -1.0548,21.03326 -7.1267,13.95637 -27.36393,20.98364 -50.66739,17.594 z m -377.74547,-0.63208 c 0.0164,-0.42815 4.51804,-18.67308 10.00382,-40.54427 l 9.97416,-39.76581 14.54518,-0.28337 c 13.53624,-0.26373 14.50736,-0.15764 13.99982,1.52946 -1.2954,4.30589 -13.88503,55.38451 -13.88503,56.33428 0,0.68073 6.61892,1.04871 18.86327,1.04871 21.82949,0 20.06685,-1.36323 16.47989,12.74544 l -2.33306,9.17673 -33.83885,0.26865 c -18.61139,0.14776 -33.82552,-0.0817 -33.8092,-0.50982 z m 80.52157,0.18153 c 0,-0.31321 1.37651,-6.02181 3.0589,-12.68581 1.6824,-6.664 3.05892,-13.12645 3.05892,-14.36103 0,-1.75104 -9.38933,-33.16497 -15.28842,-51.15059 l -0.91968,-2.804 h 15.57468 15.57466 l 2.35186,13.51018 c 1.29351,7.4306 2.64795,14.32131 3.00987,15.31269 0.49718,1.36195 3.23271,-1.94017 11.19202,-13.51017 l 10.53401,-15.3127 h 15.75021 c 14.98802,0 15.68574,0.089 14.41785,1.83791 -0.7328,1.01085 -10.6852,13.2193 -22.11644,27.12992 l -20.78408,25.292 -2.46939,9.8319 c -1.35816,5.40754 -2.92037,11.55252 -3.47158,13.65553 l -1.00218,3.82362 h -14.2356 c -7.82959,0 -14.23561,-0.25624 -14.23561,-0.56945 z m 62.17064,-0.19527 c -0.0148,-0.42061 4.45873,-18.80196 9.94145,-40.84746 l 9.96861,-40.08273 24.98108,0.31693 c 23.32004,0.29585 25.25227,0.46326 29.05963,2.51773 15.64166,8.4403 17.57288,27.92563 4.12954,41.66568 -2.27124,2.32138 -5.1715,4.9219 -6.44501,5.77893 l -2.31549,1.55822 5.03999,13.14435 c 2.77199,7.22939 5.35427,13.94731 5.73838,14.92871 0.6473,1.6538 -0.48462,1.78417 -15.46996,1.78167 l -16.16835,-0.003 -4.49035,-12.28552 c -4.23469,-11.58607 -4.63778,-12.26801 -7.07989,-11.97801 -2.64969,0.31463 -3.21912,1.90035 -7.70815,21.46494 l -0.64337,2.804 H 720.4956 c -7.84051,0 -14.26769,-0.34413 -14.28263,-0.76472 z m 54.83418,-47.41308 c 2.78379,-2.98237 3.77901,-7.16405 2.34342,-9.84648 -0.96121,-1.79604 -2.09644,-2.13424 -7.16397,-2.13424 -3.31199,0 -6.24744,0.36515 -6.52327,0.81144 -0.27583,0.44629 -1.15915,3.65815 -1.96295,7.13745 l -1.46145,6.32601 h 6.3134 c 5.23297,0 6.67986,-0.39261 8.45482,-2.29418 z m 29.85244,47.41308 c 0.0163,-0.42061 4.51805,-18.65934 10.00383,-40.53053 l 9.97416,-39.76581 14.54517,-0.28337 c 13.53653,-0.26373 14.50731,-0.15767 13.99894,1.52946 -0.30044,0.99705 -4.48721,17.64267 -9.30395,36.99027 -4.81674,19.34759 -9.21196,36.89807 -9.76716,39.00108 l -1.00947,3.82362 h -14.23558 c -7.82959,0 -14.22226,-0.34412 -14.20594,-0.76472 z m 69.63612,-0.70303 c -9.68419,-3.02806 -18.14418,-11.10264 -21.80774,-20.81426 -1.75221,-4.64483 -2.09125,-7.35625 -1.75383,-14.02543 0.57335,-11.33219 3.85929,-17.90984 13.97294,-27.97047 12.24941,-12.18519 24.93107,-17.29297 42.93524,-17.29297 11.644,0 18.56773,1.81011 24.64037,6.44187 4.42948,3.37847 8.97845,9.15813 8.97845,11.40751 0,1.03892 -22.98496,13.75934 -24.86222,13.75934 -0.34576,0 -0.64326,-0.80296 -0.6611,-1.78436 -0.0495,-2.71901 -2.33465,-5.16807 -6.41206,-6.87173 -7.63244,-3.18904 -15.53755,-1.24766 -22.26038,5.4668 -13.36438,13.34778 -8.17383,33.57715 8.04499,31.35411 5.45791,-0.74808 9.52463,-2.81181 13.21485,-6.70609 l 2.85666,-3.01464 9.67918,5.54059 c 5.32353,3.04731 9.8474,6.04524 10.05301,6.66207 0.63725,1.91178 -8.55275,9.58365 -15.59074,13.01525 -3.68574,1.7971 -9.56665,3.94303 -13.06866,4.76874 -7.78069,1.83453 -22.19056,1.86734 -27.95896,0.0638 z"
       style="fill:#c08989;fill-opacity:1;stroke:#e7c0b3;stroke-width:2.049;stroke-dasharray:none;stroke-opacity:1"
       id="path22112" /></g><script
     id="script143923"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script></svg>
